Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding type registration boolean -> org.hibernate.type.BooleanType@1eb44e46
Adding type registration boolean -> org.hibernate.type.BooleanType@1eb44e46
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1eb44e46
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@cac736f
Adding type registration true_false -> org.hibernate.type.TrueFalseType@76ccd017
Adding type registration yes_no -> org.hibernate.type.YesNoType@4361bd48
Adding type registration byte -> org.hibernate.type.ByteType@3830f1c0
Adding type registration byte -> org.hibernate.type.ByteType@3830f1c0
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3830f1c0
Adding type registration character -> org.hibernate.type.CharacterType@5aaa6d82
Adding type registration char -> org.hibernate.type.CharacterType@5aaa6d82
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5aaa6d82
Adding type registration short -> org.hibernate.type.ShortType@33833882
Adding type registration short -> org.hibernate.type.ShortType@33833882
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@33833882
Adding type registration integer -> org.hibernate.type.IntegerType@65ae6ba4
Adding type registration int -> org.hibernate.type.IntegerType@65ae6ba4
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@65ae6ba4
Adding type registration long -> org.hibernate.type.LongType@512ddf17
Adding type registration long -> org.hibernate.type.LongType@512ddf17
Adding type registration java.lang.Long -> org.hibernate.type.LongType@512ddf17
Adding type registration float -> org.hibernate.type.FloatType@2a33fae0
Adding type registration float -> org.hibernate.type.FloatType@2a33fae0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2a33fae0
Adding type registration double -> org.hibernate.type.DoubleType@12bb4df8
Adding type registration double -> org.hibernate.type.DoubleType@12bb4df8
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@12bb4df8
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7b1d7fff
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7b1d7fff
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@136432db
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@136432db
Adding type registration string -> org.hibernate.type.StringType@5577140b
Adding type registration java.lang.String -> org.hibernate.type.StringType@5577140b
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6073f712
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6d86b085
Adding type registration url -> org.hibernate.type.UrlType@532760d8
Adding type registration java.net.URL -> org.hibernate.type.UrlType@532760d8
Adding type registration date -> org.hibernate.type.DateType@5679c6c6
Adding type registration java.sql.Date -> org.hibernate.type.DateType@5679c6c6
Adding type registration time -> org.hibernate.type.TimeType@3a4afd8d
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3a4afd8d
Adding type registration timestamp -> org.hibernate.type.TimestampType@16b4a017
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@16b4a017
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@16b4a017
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2a098129
Adding type registration calendar -> org.hibernate.type.CalendarType@63e31ee
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@63e31ee
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@63e31ee
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2eafffde
Adding type registration locale -> org.hibernate.type.LocaleType@6c629d6e
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6c629d6e
Adding type registration currency -> org.hibernate.type.CurrencyType@51016012
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@51016012
Adding type registration timezone -> org.hibernate.type.TimeZoneType@60215eee
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@60215eee
Adding type registration class -> org.hibernate.type.ClassType@768debd
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@768debd
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5b1d2887
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5b1d2887
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@18e8568
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4f4a7090
Adding type registration binary -> org.hibernate.type.BinaryType@ba4d54
Adding type registration byte[] -> org.hibernate.type.BinaryType@ba4d54
Adding type registration [B -> org.hibernate.type.BinaryType@ba4d54
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@67117f44
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@67117f44
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@67117f44
Adding type registration image -> org.hibernate.type.ImageType@763d9750
Adding type registration characters -> org.hibernate.type.CharArrayType@31b7dea0
Adding type registration char[] -> org.hibernate.type.CharArrayType@31b7dea0
Adding type registration [C -> org.hibernate.type.CharArrayType@31b7dea0
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@629f0666
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@629f0666
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@629f0666
Adding type registration text -> org.hibernate.type.TextType@c39f790
Adding type registration ntext -> org.hibernate.type.NTextType@50cbc42f
Adding type registration blob -> org.hibernate.type.BlobType@7006c658
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7006c658
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7cdbc5d3
Adding type registration clob -> org.hibernate.type.ClobType@28f67ac7
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28f67ac7
Adding type registration nclob -> org.hibernate.type.NClobType@7e0babb1
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7e0babb1
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2ff4f00f
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@75bd9247
Adding type registration serializable -> org.hibernate.type.SerializableType@5a39699c
Adding type registration object -> org.hibernate.type.ObjectType@1cd072a9
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cd072a9
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@27f674d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d251891
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@48140564
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@58ceff1
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c30a502
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@49e4cb85
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2133c8f8
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@43a25848
HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
HHH000412: Hibernate Core {4.3.4.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH000043: Configuring from resource: /hibernate.cfg.xml
HHH000040: Configuration resource: /hibernate.cfg.xml
Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
connection.driver_class=com.mysql.jdbc.Driver
connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC
connection.username=root
connection.password=123456
connection.pool_size=1
dialect=org.hibernate.dialect.MySQLDialect
current_session_context_class=thread
show_sql=true
hibernate.hbm2ddl.auto=update
Session-factory config [null] named class [fr.formation.inti.entities.Employee] for mapping
Session-factory config [null] named class [fr.formation.inti.entities.Department] for mapping
HHH000041: Configured SessionFactory: null
Properties: {java.vendor=Oracle Corporation, show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_211\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_211\jre\classes, hibernate.current_session_context_class=thread, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_211-b12, user.name=pc, connection.driver_class=com.mysql.jdbc.Driver, current_session_context_class=thread, user.language=fr, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_211\jre\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.8.0_211, user.timezone=Europe/Paris, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_211\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=FR, connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, java.home=C:\Program Files\Java\jdk1.8.0_211\jre, java.vm.info=mixed mode, os.version=10.0, path.separator=;, connection.password=123456, java.vm.version=25.211-b12, hibernate.connection.password=123456, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, user.script=, user.home=C:\Users\pc, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_211\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_221/bin/server;C:/Program Files/Java/jre1.8.0_221/bin;C:/Program Files/Java/jre1.8.0_221/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files\Java\jdk1.8.0_211\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;D:\_Pratique\apache-maven-3.6.1\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\pc\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\pc\AppData\Roaming\npm;C:\Users\pc\Desktop;;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=fr.formation.inti.controllers.AppService, java.class.path=C:\Users\pc\eclipse-workspace09\core\target\classes;C:\Users\pc\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\pc\.m2\repository\org\hibernate\hibernate-entitymanager\4.2.8.Final\hibernate-entitymanager-4.2.8.Final.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\pc\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\pc\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\pc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;C:\Users\pc\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\pc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.2.Final\hibernate-commons-annotations-4.0.2.Final.jar;C:\Users\pc\.m2\repository\org\hibernate\hibernate-core\4.3.4.Final\hibernate-core-4.3.4.Final.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\pc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\pc\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\pc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\pc\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\pc\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\pc\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\pc\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, sun.os.patch.level=, connection.pool_size=1, java.io.tmpdir=C:\Users\pc\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_211\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\pc\eclipse-workspace09\core, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true, hibernate.connection.pool_size=1}
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Preparing to build session factory with filters : {}
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/bd?serverTimezone=UTC]
HHH000046: Connection properties: {user=root, password=123456}
HHH000006: Autocommit mode: false
HHH000115: Hibernate connection pool size: 1 (min=1)
Initializing Connection pool with 1 Connections
Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
Connection pool now considered primed; min-size will be maintained
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding type registration boolean -> org.hibernate.type.BooleanType@279ad2e3
Adding type registration boolean -> org.hibernate.type.BooleanType@279ad2e3
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@279ad2e3
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@731f8236
Adding type registration true_false -> org.hibernate.type.TrueFalseType@971d0d8
Adding type registration yes_no -> org.hibernate.type.YesNoType@51b7e5df
Adding type registration byte -> org.hibernate.type.ByteType@4d826d77
Adding type registration byte -> org.hibernate.type.ByteType@4d826d77
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4d826d77
Adding type registration character -> org.hibernate.type.CharacterType@7f9fcf7f
Adding type registration char -> org.hibernate.type.CharacterType@7f9fcf7f
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7f9fcf7f
Adding type registration short -> org.hibernate.type.ShortType@57d5872c
Adding type registration short -> org.hibernate.type.ShortType@57d5872c
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@57d5872c
Adding type registration integer -> org.hibernate.type.IntegerType@5ea434c8
Adding type registration int -> org.hibernate.type.IntegerType@5ea434c8
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5ea434c8
Adding type registration long -> org.hibernate.type.LongType@52e677af
Adding type registration long -> org.hibernate.type.LongType@52e677af
Adding type registration java.lang.Long -> org.hibernate.type.LongType@52e677af
Adding type registration float -> org.hibernate.type.FloatType@7d68ef40
Adding type registration float -> org.hibernate.type.FloatType@7d68ef40
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7d68ef40
Adding type registration double -> org.hibernate.type.DoubleType@55ca8de8
Adding type registration double -> org.hibernate.type.DoubleType@55ca8de8
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@55ca8de8
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ef60048
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ef60048
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@17c1bced
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@17c1bced
Adding type registration string -> org.hibernate.type.StringType@3ee0fea4
Adding type registration java.lang.String -> org.hibernate.type.StringType@3ee0fea4
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3b2da18f
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@78b1cc93
Adding type registration url -> org.hibernate.type.UrlType@436a4e4b
Adding type registration java.net.URL -> org.hibernate.type.UrlType@436a4e4b
Adding type registration date -> org.hibernate.type.DateType@5db45159
Adding type registration java.sql.Date -> org.hibernate.type.DateType@5db45159
Adding type registration time -> org.hibernate.type.TimeType@19d37183
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@19d37183
Adding type registration timestamp -> org.hibernate.type.TimestampType@79ca92b9
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@79ca92b9
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@79ca92b9
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6e75aa0d
Adding type registration calendar -> org.hibernate.type.CalendarType@7ea37dbf
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7ea37dbf
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7ea37dbf
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@10db82ae
Adding type registration locale -> org.hibernate.type.LocaleType@79ad8b2f
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79ad8b2f
Adding type registration currency -> org.hibernate.type.CurrencyType@7995092a
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7995092a
Adding type registration timezone -> org.hibernate.type.TimeZoneType@23f7d05d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@23f7d05d
Adding type registration class -> org.hibernate.type.ClassType@7692d9cc
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7692d9cc
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@78e94dcf
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@78e94dcf
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3c72f59f
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3901d134
Adding type registration binary -> org.hibernate.type.BinaryType@d706f19
Adding type registration byte[] -> org.hibernate.type.BinaryType@d706f19
Adding type registration [B -> org.hibernate.type.BinaryType@d706f19
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4278a03f
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4278a03f
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4278a03f
Adding type registration image -> org.hibernate.type.ImageType@6ce139a4
Adding type registration characters -> org.hibernate.type.CharArrayType@309e345f
Adding type registration char[] -> org.hibernate.type.CharArrayType@309e345f
Adding type registration [C -> org.hibernate.type.CharArrayType@309e345f
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6b26e945
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6b26e945
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6b26e945
Adding type registration text -> org.hibernate.type.TextType@2f112965
Adding type registration ntext -> org.hibernate.type.NTextType@419c5f1a
Adding type registration blob -> org.hibernate.type.BlobType@794cb805
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@794cb805
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@20d28811
Adding type registration clob -> org.hibernate.type.ClobType@1c93084c
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1c93084c
Adding type registration nclob -> org.hibernate.type.NClobType@61230f6a
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@61230f6a
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@470f1802
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1622f1b
Adding type registration serializable -> org.hibernate.type.SerializableType@6e4784bc
Adding type registration object -> org.hibernate.type.ObjectType@63355449
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@63355449
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1700915
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@21de60b4
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@c267ef4
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@30ee2816
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@31d7b7bf
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@635eaaf1
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5c30a9b0
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1ddf84b8
HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
HHH000412: Hibernate Core {4.3.4.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH000043: Configuring from resource: /hibernate.cfg.xml
HHH000040: Configuration resource: /hibernate.cfg.xml
Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
connection.driver_class=com.mysql.jdbc.Driver
connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC
connection.username=root
connection.password=123456
connection.pool_size=1
dialect=org.hibernate.dialect.MySQLDialect
current_session_context_class=thread
show_sql=true
hibernate.hbm2ddl.auto=update
Session-factory config [null] named class [fr.formation.inti.entities.Employee] for mapping
Session-factory config [null] named class [fr.formation.inti.entities.Department] for mapping
HHH000041: Configured SessionFactory: null
Properties: {java.vendor=Oracle Corporation, show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_211\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_211\jre\classes, hibernate.current_session_context_class=thread, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_211-b12, user.name=pc, connection.driver_class=com.mysql.jdbc.Driver, current_session_context_class=thread, user.language=fr, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_211\jre\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.8.0_211, user.timezone=Europe/Paris, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_211\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=FR, connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, java.home=C:\Program Files\Java\jdk1.8.0_211\jre, java.vm.info=mixed mode, os.version=10.0, path.separator=;, connection.password=123456, java.vm.version=25.211-b12, hibernate.connection.password=123456, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, user.script=, user.home=C:\Users\pc, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_211\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0_211\jre\bin;C:/Program Files/Java/jre1.8.0_221/bin/server;C:/Program Files/Java/jre1.8.0_221/bin;C:/Program Files/Java/jre1.8.0_221/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files\Java\jdk1.8.0_211\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;D:\_Pratique\apache-maven-3.6.1\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\pc\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\pc\AppData\Roaming\npm;C:\Users\pc\Desktop;;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=fr.formation.inti.controllers.AppService, java.class.path=C:\Users\pc\eclipse-workspace09\core\target\classes;C:\Users\pc\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\pc\.m2\repository\org\hibernate\hibernate-entitymanager\4.2.8.Final\hibernate-entitymanager-4.2.8.Final.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\pc\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\pc\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\pc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.1.Final\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;C:\Users\pc\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\pc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.2.Final\hibernate-commons-annotations-4.0.2.Final.jar;C:\Users\pc\.m2\repository\org\hibernate\hibernate-core\4.3.4.Final\hibernate-core-4.3.4.Final.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\pc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\pc\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\pc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\pc\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\pc\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\pc\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\pc\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\pc\eclipse\jee-2019-09\eclipse\configuration\org.eclipse.osgi\412\0\.cp\lib\javaagent-shaded.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, sun.os.patch.level=, connection.pool_size=1, java.io.tmpdir=C:\Users\pc\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_211\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\pc\eclipse-workspace09\core, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true, hibernate.connection.pool_size=1}
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Preparing to build session factory with filters : {}
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/bd?serverTimezone=UTC]
HHH000046: Connection properties: {user=root, password=123456}
HHH000006: Autocommit mode: false
HHH000115: Hibernate connection pool size: 1 (min=1)
Initializing Connection pool with 1 Connections
Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
Connection pool now considered primed; min-size will be maintained
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding type registration boolean -> org.hibernate.type.BooleanType@1ee0005
Adding type registration boolean -> org.hibernate.type.BooleanType@1ee0005
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ee0005
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@626b2d4a
Adding type registration true_false -> org.hibernate.type.TrueFalseType@123a439b
Adding type registration yes_no -> org.hibernate.type.YesNoType@36aa7bc2
Adding type registration byte -> org.hibernate.type.ByteType@4926097b
Adding type registration byte -> org.hibernate.type.ByteType@4926097b
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4926097b
Adding type registration character -> org.hibernate.type.CharacterType@71dac704
Adding type registration char -> org.hibernate.type.CharacterType@71dac704
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@71dac704
Adding type registration short -> org.hibernate.type.ShortType@606d8acf
Adding type registration short -> org.hibernate.type.ShortType@606d8acf
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@606d8acf
Adding type registration integer -> org.hibernate.type.IntegerType@5fdef03a
Adding type registration int -> org.hibernate.type.IntegerType@5fdef03a
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5fdef03a
Adding type registration long -> org.hibernate.type.LongType@4aa8f0b4
Adding type registration long -> org.hibernate.type.LongType@4aa8f0b4
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4aa8f0b4
Adding type registration float -> org.hibernate.type.FloatType@16f65612
Adding type registration float -> org.hibernate.type.FloatType@16f65612
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@16f65612
Adding type registration double -> org.hibernate.type.DoubleType@21588809
Adding type registration double -> org.hibernate.type.DoubleType@21588809
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@21588809
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2437c6dc
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2437c6dc
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@383534aa
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@383534aa
Adding type registration string -> org.hibernate.type.StringType@1055e4af
Adding type registration java.lang.String -> org.hibernate.type.StringType@1055e4af
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1c6b6478
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@43556938
Adding type registration url -> org.hibernate.type.UrlType@3abfe836
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3abfe836
Adding type registration date -> org.hibernate.type.DateType@68f7aae2
Adding type registration java.sql.Date -> org.hibernate.type.DateType@68f7aae2
Adding type registration time -> org.hibernate.type.TimeType@7cef4e59
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7cef4e59
Adding type registration timestamp -> org.hibernate.type.TimestampType@555590
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@555590
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@555590
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3c679bde
Adding type registration calendar -> org.hibernate.type.CalendarType@12f40c25
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@12f40c25
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@12f40c25
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3419866c
Adding type registration locale -> org.hibernate.type.LocaleType@6842775d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6842775d
Adding type registration currency -> org.hibernate.type.CurrencyType@3f102e87
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3f102e87
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2280cdac
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2280cdac
Adding type registration class -> org.hibernate.type.ClassType@4ca8195f
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4ca8195f
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@66133adc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@66133adc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@24273305
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@33e5ccce
Adding type registration binary -> org.hibernate.type.BinaryType@6956de9
Adding type registration byte[] -> org.hibernate.type.BinaryType@6956de9
Adding type registration [B -> org.hibernate.type.BinaryType@6956de9
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@de0a01f
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@de0a01f
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@de0a01f
Adding type registration image -> org.hibernate.type.ImageType@5d3411d
Adding type registration characters -> org.hibernate.type.CharArrayType@2be94b0f
Adding type registration char[] -> org.hibernate.type.CharArrayType@2be94b0f
Adding type registration [C -> org.hibernate.type.CharArrayType@2be94b0f
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@47d384ee
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@47d384ee
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@47d384ee
Adding type registration text -> org.hibernate.type.TextType@1bc6a36e
Adding type registration ntext -> org.hibernate.type.NTextType@71e7a66b
Adding type registration blob -> org.hibernate.type.BlobType@233c0b17
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@233c0b17
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@33a10788
Adding type registration clob -> org.hibernate.type.ClobType@35851384
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@35851384
Adding type registration nclob -> org.hibernate.type.NClobType@45c8e616
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@45c8e616
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7cf10a6f
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5ba23b66
Adding type registration serializable -> org.hibernate.type.SerializableType@7d417077
Adding type registration object -> org.hibernate.type.ObjectType@6bdf28bb
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bdf28bb
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e580929
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1cd072a9
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7c75222b
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4c203ea1
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@27f674d
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1d251891
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@48140564
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@58ceff1
HCANN000001: Hibernate Commons Annotations {4.0.4.Final}
HHH000412: Hibernate Core {4.3.4.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH000043: Configuring from resource: /hibernate.cfg.xml
HHH000040: Configuration resource: /hibernate.cfg.xml
Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
connection.driver_class=com.mysql.jdbc.Driver
connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC
connection.username=root
connection.password=123456
connection.pool_size=1
dialect=org.hibernate.dialect.MySQLDialect
current_session_context_class=thread
show_sql=true
hibernate.hbm2ddl.auto=update
Session-factory config [null] named class [fr.formation.inti.entities.Employee] for mapping
Session-factory config [null] named class [fr.formation.inti.entities.Department] for mapping
HHH000041: Configured SessionFactory: null
Properties: {java.vendor=Oracle Corporation, show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_211\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_211\jre\classes, hibernate.current_session_context_class=thread, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_211-b12, user.name=pc, connection.driver_class=com.mysql.jdbc.Driver, current_session_context_class=thread, user.language=fr, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_211\jre\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.8.0_211, user.timezone=Europe/Paris, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_211\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=FR, connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, java.home=C:\Program Files\Java\jdk1.8.0_211\jre, java.vm.info=mixed mode, os.version=10.0, path.separator=;, connection.password=123456, java.vm.version=25.211-b12, hibernate.connection.password=123456, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, user.script=, user.home=C:\Users\pc, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_211\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_221/bin/server;C:/Program Files/Java/jre1.8.0_221/bin;C:/Program Files/Java/jre1.8.0_221/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files\Java\jdk1.8.0_211\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;D:\_Pratique\apache-maven-3.6.1\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\pc\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\pc\AppData\Roaming\npm;C:\Users\pc\Desktop;;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=fr.formation.inti.controllers.AppService, java.class.path=C:\Users\pc\eclipse-workspace09\core\target\classes;C:\Users\pc\.m2\repository\org\hibernate\hibernate-core\4.3.4.Final\hibernate-core-4.3.4.Final.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\pc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\pc\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\pc\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\pc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;C:\Users\pc\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\pc\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\pc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\pc\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\pc\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\pc\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\pc\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, sun.os.patch.level=, connection.pool_size=1, java.io.tmpdir=C:\Users\pc\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_211\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\pc\eclipse-workspace09\core, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true, hibernate.connection.pool_size=1}
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Preparing to build session factory with filters : {}
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/bd?serverTimezone=UTC]
HHH000046: Connection properties: {user=root, password=123456}
HHH000006: Autocommit mode: false
HHH000115: Hibernate connection pool size: 1 (min=1)
Initializing Connection pool with 1 Connections
Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: fr.formation.inti.entities.Employee
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name Employee
Bind entity fr.formation.inti.entities.Employee on table EMPLOYEE
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=EMP_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property empId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:empId]
building SimpleValue for empId
Building property empId
Binding column: Ejb3JoinColumn{logicalColumnName='DEPT_ID', referencedColumn='DEPT_ID', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=department, insertable=true, updatable=true, unique=false}
Building property department
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='manager'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=employees, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=employees_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='employees_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='manager'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='manager'}
Collection role: fr.formation.inti.entities.Employee.employees
Building property employees
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=END_DATE, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property endDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:endDate]
building SimpleValue for endDate
Building property endDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=FIRST_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property firstName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:firstName]
building SimpleValue for firstName
Building property firstName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=LAST_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:lastName]
building SimpleValue for lastName
Building property lastName
Binding column: Ejb3JoinColumn{logicalColumnName='SUPERIOR_EMP_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=manager, insertable=true, updatable=true, unique=false}
Building property manager
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=START_DATE, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property startDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:startDate]
building SimpleValue for startDate
Building property startDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:title]
building SimpleValue for title
Building property title
Binding entity from annotated class: fr.formation.inti.entities.Department
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name Department
Bind entity fr.formation.inti.entities.Department on table DEPARTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=DEPT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property deptId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Department:deptId]
building SimpleValue for deptId
Building property deptId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=employees, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=employees_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='employees_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
Collection role: fr.formation.inti.entities.Department.employees
Building property employees
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Department:name]
building SimpleValue for name
Building property name
Starting fillSimpleValue for empId
Starting fillSimpleValue for endDate
Starting fillSimpleValue for firstName
Starting fillSimpleValue for lastName
Starting fillSimpleValue for startDate
Starting fillSimpleValue for title
Starting fillSimpleValue for deptId
Starting fillSimpleValue for name
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: fr.formation.inti.entities.Employee.employees
Binding a OneToMany: fr.formation.inti.entities.Employee.employees through a foreign key
Mapping collection: fr.formation.inti.entities.Employee.employees -> EMPLOYEE
Retrieving property fr.formation.inti.entities.Employee.manager
Mapped collection key: SUPERIOR_EMP_ID, one-to-many: fr.formation.inti.entities.Employee
Second pass for collection: fr.formation.inti.entities.Department.employees
Binding a OneToMany: fr.formation.inti.entities.Department.employees through a foreign key
Mapping collection: fr.formation.inti.entities.Department.employees -> EMPLOYEE
Retrieving property fr.formation.inti.entities.Employee.department
Mapped collection key: DEPT_ID, one-to-many: fr.formation.inti.entities.Employee
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: fr.formation.inti.entities.Department
Resolving reference to class: fr.formation.inti.entities.Employee
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000399: Using default transaction strategy (direct JDBC transactions)
Using BatchFetchStyle : LEGACY
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Default null ordering: none
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: disabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
JTA Track by Thread: enabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_211\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_211\jre\classes, hibernate.current_session_context_class=thread, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_211-b12, user.name=pc, connection.driver_class=com.mysql.jdbc.Driver, current_session_context_class=thread, user.language=fr, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_211\jre\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.8.0_211, user.timezone=Europe/Paris, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_211\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=FR, connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, java.home=C:\Program Files\Java\jdk1.8.0_211\jre, java.vm.info=mixed mode, os.version=10.0, path.separator=;, connection.password=123456, java.vm.version=25.211-b12, hibernate.connection.password=123456, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, user.script=, user.home=C:\Users\pc, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_211\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_221/bin/server;C:/Program Files/Java/jre1.8.0_221/bin;C:/Program Files/Java/jre1.8.0_221/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files\Java\jdk1.8.0_211\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;D:\_Pratique\apache-maven-3.6.1\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\pc\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\pc\AppData\Roaming\npm;C:\Users\pc\Desktop;;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=fr.formation.inti.controllers.AppService, java.class.path=C:\Users\pc\eclipse-workspace09\core\target\classes;C:\Users\pc\.m2\repository\org\hibernate\hibernate-core\4.3.4.Final\hibernate-core-4.3.4.Final.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\pc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\pc\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\pc\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\pc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;C:\Users\pc\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\pc\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\pc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\pc\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\pc\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\pc\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\pc\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, sun.os.patch.level=, connection.pool_size=1, java.io.tmpdir=C:\Users\pc\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_211\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\pc\eclipse-workspace09\core, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.pool_size=1, hibernate.show_sql=true}
Skipping JACC integration as it was not enabled
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for collection: fr.formation.inti.entities.Department.employees
 Row insert: update EMPLOYEE set DEPT_ID=? where EMP_ID=?
 Row update: update EMPLOYEE set  where EMP_ID=?
 Row delete: update EMPLOYEE set DEPT_ID=null where DEPT_ID=? and EMP_ID=?
 One-shot delete: update EMPLOYEE set DEPT_ID=null where DEPT_ID=?
Static SQL for collection: fr.formation.inti.entities.Employee.employees
 Row insert: update EMPLOYEE set SUPERIOR_EMP_ID=? where EMP_ID=?
 Row update: update EMPLOYEE set  where EMP_ID=?
 Row delete: update EMPLOYEE set SUPERIOR_EMP_ID=null where SUPERIOR_EMP_ID=? and EMP_ID=?
 One-shot delete: update EMPLOYEE set SUPERIOR_EMP_ID=null where SUPERIOR_EMP_ID=?
Static SQL for entity: fr.formation.inti.entities.Employee
 Version select: select EMP_ID from EMPLOYEE where EMP_ID =?
 Snapshot select: select employee_.EMP_ID, employee_.DEPT_ID as DEPT_ID7_1_, employee_.END_DATE as END_DATE2_1_, employee_.FIRST_NAME as FIRST_NA3_1_, employee_.LAST_NAME as LAST_NAM4_1_, employee_.SUPERIOR_EMP_ID as SUPERIOR8_1_, employee_.START_DATE as START_DA5_1_, employee_.title as title6_1_ from EMPLOYEE employee_ where employee_.EMP_ID=?
 Insert 0: insert into EMPLOYEE (DEPT_ID, END_DATE, FIRST_NAME, LAST_NAME, SUPERIOR_EMP_ID, START_DATE, title, EMP_ID) values (?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update EMPLOYEE set DEPT_ID=?, END_DATE=?, FIRST_NAME=?, LAST_NAME=?, SUPERIOR_EMP_ID=?, START_DATE=?, title=? where EMP_ID=?
 Delete 0: delete from EMPLOYEE where EMP_ID=?
 Identity insert: insert into EMPLOYEE (DEPT_ID, END_DATE, FIRST_NAME, LAST_NAME, SUPERIOR_EMP_ID, START_DATE, title) values (?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66c61024]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [NONE]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34158c08]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [READ]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52c3cb31]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [UPGRADE]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53941c2f]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [UPGRADE_NOWAIT]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21fd5faa]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [UPGRADE_SKIPLOCKED]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5460cf3a]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [FORCE]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e6a5539]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [PESSIMISTIC_READ]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d025197]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [PESSIMISTIC_WRITE]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e4204e2]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [PESSIMISTIC_FORCE_INCREMENT]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@740d2e78]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [OPTIMISTIC]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72437d8d]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [OPTIMISTIC_FORCE_INCREMENT]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Static select for action ACTION_MERGE on entity fr.formation.inti.entities.Employee: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Static select for action ACTION_REFRESH on entity fr.formation.inti.entities.Employee: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Static SQL for entity: fr.formation.inti.entities.Department
 Version select: select DEPT_ID from DEPARTMENT where DEPT_ID =?
 Snapshot select: select department_.DEPT_ID, department_.NAME as NAME2_0_ from DEPARTMENT department_ where department_.DEPT_ID=?
 Insert 0: insert into DEPARTMENT (NAME, DEPT_ID) values (?, ?)
 Update 0: update DEPARTMENT set NAME=? where DEPT_ID=?
 Delete 0: delete from DEPARTMENT where DEPT_ID=?
 Identity insert: insert into DEPARTMENT (NAME) values (?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ce1d6d0]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [NONE]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f3f02ee]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [READ]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dcb4f5f]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [UPGRADE]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16ce702d]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [UPGRADE_NOWAIT]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ca20101]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [UPGRADE_SKIPLOCKED]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a5ecce3]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [FORCE]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ea6e30c]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [PESSIMISTIC_READ]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dcd168a]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [PESSIMISTIC_WRITE]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21a21c64]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [PESSIMISTIC_FORCE_INCREMENT]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42bc14c1]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [OPTIMISTIC]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62ef27a8]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [OPTIMISTIC_FORCE_INCREMENT]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Static select for action ACTION_MERGE on entity fr.formation.inti.entities.Department: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Static select for action ACTION_REFRESH on entity fr.formation.inti.entities.Department: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@74bada02]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ad3381f]
Visiting attribute path : department
Property path deemed to be circular : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=fr.formation.inti.entities.Department.employees)
    - Returns
       - CollectionReturnImpl(collection=fr.formation.inti.entities.Department.employees, querySpaceUid=<gen:0>, path=[fr.formation.inti.entities.Department.employees])
          - (collection element) CollectionFetchableElementEntityGraph(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:1>, path=[fr.formation.inti.entities.Department.employees].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=fr.formation.inti.entities.Department.employees)
          - SQL table alias mapping - employees0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID7_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - EMP_ID1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=fr.formation.inti.entities.Employee)
                - SQL table alias mapping - employees0_
                - alias suffix - 1_
                - suffixed key columns - {EMP_ID1_1_1_}

Static select for collection fr.formation.inti.entities.Department.employees: select employees0_.DEPT_ID as DEPT_ID7_0_0_, employees0_.EMP_ID as EMP_ID1_1_0_, employees0_.EMP_ID as EMP_ID1_1_1_, employees0_.DEPT_ID as DEPT_ID7_1_1_, employees0_.END_DATE as END_DATE2_1_1_, employees0_.FIRST_NAME as FIRST_NA3_1_1_, employees0_.LAST_NAME as LAST_NAM4_1_1_, employees0_.SUPERIOR_EMP_ID as SUPERIOR8_1_1_, employees0_.START_DATE as START_DA5_1_1_, employees0_.title as title6_1_1_ from EMPLOYEE employees0_ where employees0_.DEPT_ID=? order by employees0_.FIRST_NAME desc
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@33fe57a9]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4982cc36]
Visiting attribute path : department
Visiting attribute path : employees
Property path deemed to be circular : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Property path deemed to be circular : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=fr.formation.inti.entities.Employee.employees)
    - Returns
       - CollectionReturnImpl(collection=fr.formation.inti.entities.Employee.employees, querySpaceUid=<gen:0>, path=[fr.formation.inti.entities.Employee.employees])
          - (collection element) CollectionFetchableElementEntityGraph(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:1>, path=[fr.formation.inti.entities.Employee.employees].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=fr.formation.inti.entities.Employee.employees)
          - SQL table alias mapping - employees0_
          - alias suffix - 0_
          - suffixed key columns - {SUPERIOR8_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - EMP_ID1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=fr.formation.inti.entities.Employee)
                - SQL table alias mapping - employees0_
                - alias suffix - 1_
                - suffixed key columns - {EMP_ID1_1_1_}

Static select for collection fr.formation.inti.entities.Employee.employees: select employees0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employees0_.EMP_ID as EMP_ID1_1_0_, employees0_.EMP_ID as EMP_ID1_1_1_, employees0_.DEPT_ID as DEPT_ID7_1_1_, employees0_.END_DATE as END_DATE2_1_1_, employees0_.FIRST_NAME as FIRST_NA3_1_1_, employees0_.LAST_NAME as LAST_NAM4_1_1_, employees0_.SUPERIOR_EMP_ID as SUPERIOR8_1_1_, employees0_.START_DATE as START_DA5_1_1_, employees0_.title as title6_1_1_ from EMPLOYEE employees0_ where employees0_.SUPERIOR_EMP_ID=?
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@22295ec4
Registering SessionFactory: 14d44c18-f988-488c-b110-5a7587c62bd6 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: fr.formation.inti.entities.Department
Resolving reference to class: fr.formation.inti.entities.Employee
HHH000261: Table found: bd.department
HHH000037: Columns: [name, dept_id]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: bd.employee
HHH000037: Columns: [end_date, last_name, assigned_branch_id, title, dept_id, first_name, superior_emp_id, emp_id, start_date]
HHH000108: Foreign keys: [employee_employee_fk, employee_department_fk, employee_branch_fk]
HHH000126: Indexes: [employee_employee_fk, employee_department_fk, employee_branch_fk, primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Adding type registration boolean -> org.hibernate.type.BooleanType@1ee0005
Adding type registration boolean -> org.hibernate.type.BooleanType@1ee0005
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ee0005
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@626b2d4a
Adding type registration true_false -> org.hibernate.type.TrueFalseType@123a439b
Adding type registration yes_no -> org.hibernate.type.YesNoType@36aa7bc2
Adding type registration byte -> org.hibernate.type.ByteType@4926097b
Adding type registration byte -> org.hibernate.type.ByteType@4926097b
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4926097b
Adding type registration character -> org.hibernate.type.CharacterType@71dac704
Adding type registration char -> org.hibernate.type.CharacterType@71dac704
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@71dac704
Adding type registration short -> org.hibernate.type.ShortType@606d8acf
Adding type registration short -> org.hibernate.type.ShortType@606d8acf
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@606d8acf
Adding type registration integer -> org.hibernate.type.IntegerType@5fdef03a
Adding type registration int -> org.hibernate.type.IntegerType@5fdef03a
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5fdef03a
Adding type registration long -> org.hibernate.type.LongType@4aa8f0b4
Adding type registration long -> org.hibernate.type.LongType@4aa8f0b4
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4aa8f0b4
Adding type registration float -> org.hibernate.type.FloatType@16f65612
Adding type registration float -> org.hibernate.type.FloatType@16f65612
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@16f65612
Adding type registration double -> org.hibernate.type.DoubleType@21588809
Adding type registration double -> org.hibernate.type.DoubleType@21588809
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@21588809
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2437c6dc
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2437c6dc
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@383534aa
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@383534aa
Adding type registration string -> org.hibernate.type.StringType@1055e4af
Adding type registration java.lang.String -> org.hibernate.type.StringType@1055e4af
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1c6b6478
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@43556938
Adding type registration url -> org.hibernate.type.UrlType@3abfe836
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3abfe836
Adding type registration date -> org.hibernate.type.DateType@68f7aae2
Adding type registration java.sql.Date -> org.hibernate.type.DateType@68f7aae2
Adding type registration time -> org.hibernate.type.TimeType@7cef4e59
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7cef4e59
Adding type registration timestamp -> org.hibernate.type.TimestampType@555590
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@555590
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@555590
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3c679bde
Adding type registration calendar -> org.hibernate.type.CalendarType@12f40c25
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@12f40c25
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@12f40c25
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3419866c
Adding type registration locale -> org.hibernate.type.LocaleType@6842775d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6842775d
Adding type registration currency -> org.hibernate.type.CurrencyType@3f102e87
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3f102e87
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2280cdac
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2280cdac
Adding type registration class -> org.hibernate.type.ClassType@4ca8195f
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4ca8195f
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@66133adc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@66133adc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@24273305
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@33e5ccce
Adding type registration binary -> org.hibernate.type.BinaryType@6956de9
Adding type registration byte[] -> org.hibernate.type.BinaryType@6956de9
Adding type registration [B -> org.hibernate.type.BinaryType@6956de9
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@de0a01f
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@de0a01f
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@de0a01f
Adding type registration image -> org.hibernate.type.ImageType@5d3411d
Adding type registration characters -> org.hibernate.type.CharArrayType@2be94b0f
Adding type registration char[] -> org.hibernate.type.CharArrayType@2be94b0f
Adding type registration [C -> org.hibernate.type.CharArrayType@2be94b0f
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@47d384ee
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@47d384ee
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@47d384ee
Adding type registration text -> org.hibernate.type.TextType@1bc6a36e
Adding type registration ntext -> org.hibernate.type.NTextType@71e7a66b
Adding type registration blob -> org.hibernate.type.BlobType@233c0b17
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@233c0b17
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@33a10788
Adding type registration clob -> org.hibernate.type.ClobType@35851384
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@35851384
Adding type registration nclob -> org.hibernate.type.NClobType@45c8e616
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@45c8e616
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7cf10a6f
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5ba23b66
Adding type registration serializable -> org.hibernate.type.SerializableType@7d417077
Adding type registration object -> org.hibernate.type.ObjectType@6bdf28bb
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bdf28bb
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@66565121
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2fc6f97f
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d2ee678
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6179e425
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@35f26e72
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2d6764b2
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@67304a40
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@49c6c24f
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH000043: Configuring from resource: /hibernate.cfg.xml
HHH000040: Configuration resource: /hibernate.cfg.xml
Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
connection.driver_class=com.mysql.jdbc.Driver
connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC
connection.username=root
connection.password=123456
connection.pool_size=1
dialect=org.hibernate.dialect.MySQLDialect
current_session_context_class=thread
show_sql=true
hibernate.hbm2ddl.auto=update
Session-factory config [null] named class [fr.formation.inti.entities.Employee] for mapping
Session-factory config [null] named class [fr.formation.inti.entities.Department] for mapping
HHH000041: Configured SessionFactory: null
Properties: {java.vendor=Oracle Corporation, show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_211\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_211\jre\classes, hibernate.current_session_context_class=thread, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_211-b12, user.name=pc, connection.driver_class=com.mysql.jdbc.Driver, current_session_context_class=thread, user.language=fr, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_211\jre\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.8.0_211, user.timezone=Europe/Paris, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_211\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=FR, connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, java.home=C:\Program Files\Java\jdk1.8.0_211\jre, java.vm.info=mixed mode, os.version=10.0, path.separator=;, connection.password=123456, java.vm.version=25.211-b12, hibernate.connection.password=123456, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, user.script=, user.home=C:\Users\pc, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_211\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_221/bin/server;C:/Program Files/Java/jre1.8.0_221/bin;C:/Program Files/Java/jre1.8.0_221/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files\Java\jdk1.8.0_211\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;D:\_Pratique\apache-maven-3.6.1\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\pc\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\pc\AppData\Roaming\npm;C:\Users\pc\Desktop;;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=fr.formation.inti.controllers.AppService, java.class.path=C:\Users\pc\eclipse-workspace09\core\target\classes;C:\Users\pc\.m2\repository\org\hibernate\hibernate-core\4.3.4.Final\hibernate-core-4.3.4.Final.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\pc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\pc\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\pc\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\pc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;C:\Users\pc\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\pc\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\pc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\pc\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\pc\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\pc\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\pc\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, sun.os.patch.level=, connection.pool_size=1, java.io.tmpdir=C:\Users\pc\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_211\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\pc\eclipse-workspace09\core, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true, hibernate.connection.pool_size=1}
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Preparing to build session factory with filters : {}
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/bd?serverTimezone=UTC]
HHH000046: Connection properties: {user=root, password=123456}
HHH000006: Autocommit mode: false
HHH000115: Hibernate connection pool size: 1 (min=1)
Initializing Connection pool with 1 Connections
Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: fr.formation.inti.entities.Employee
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name Employee
Bind entity fr.formation.inti.entities.Employee on table EMPLOYEE
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=EMP_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property empId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:empId]
building SimpleValue for empId
Building property empId
Binding column: Ejb3JoinColumn{logicalColumnName='DEPT_ID', referencedColumn='DEPT_ID', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=department, insertable=true, updatable=true, unique=false}
Building property department
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='manager'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=employees, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=employees_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='employees_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='manager'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='manager'}
Collection role: fr.formation.inti.entities.Employee.employees
Building property employees
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=END_DATE, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property endDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:endDate]
building SimpleValue for endDate
Building property endDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=FIRST_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property firstName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:firstName]
building SimpleValue for firstName
Building property firstName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=LAST_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:lastName]
building SimpleValue for lastName
Building property lastName
Binding column: Ejb3JoinColumn{logicalColumnName='SUPERIOR_EMP_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=manager, insertable=true, updatable=true, unique=false}
Building property manager
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=START_DATE, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property startDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:startDate]
building SimpleValue for startDate
Building property startDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:title]
building SimpleValue for title
Building property title
Binding entity from annotated class: fr.formation.inti.entities.Department
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name Department
Bind entity fr.formation.inti.entities.Department on table DEPARTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=DEPT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property deptId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Department:deptId]
building SimpleValue for deptId
Building property deptId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=employees, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=employees_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='employees_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
Collection role: fr.formation.inti.entities.Department.employees
Building property employees
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Department:name]
building SimpleValue for name
Building property name
Starting fillSimpleValue for empId
Starting fillSimpleValue for endDate
Starting fillSimpleValue for firstName
Starting fillSimpleValue for lastName
Starting fillSimpleValue for startDate
Starting fillSimpleValue for title
Starting fillSimpleValue for deptId
Starting fillSimpleValue for name
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: fr.formation.inti.entities.Employee.employees
Binding a OneToMany: fr.formation.inti.entities.Employee.employees through a foreign key
Mapping collection: fr.formation.inti.entities.Employee.employees -> EMPLOYEE
Retrieving property fr.formation.inti.entities.Employee.manager
Mapped collection key: SUPERIOR_EMP_ID, one-to-many: fr.formation.inti.entities.Employee
Second pass for collection: fr.formation.inti.entities.Department.employees
Binding a OneToMany: fr.formation.inti.entities.Department.employees through a foreign key
Mapping collection: fr.formation.inti.entities.Department.employees -> EMPLOYEE
Retrieving property fr.formation.inti.entities.Employee.department
Mapped collection key: DEPT_ID, one-to-many: fr.formation.inti.entities.Employee
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: fr.formation.inti.entities.Department
Resolving reference to class: fr.formation.inti.entities.Employee
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000399: Using default transaction strategy (direct JDBC transactions)
Using BatchFetchStyle : LEGACY
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Default null ordering: none
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: disabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
JTA Track by Thread: enabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_211\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_211\jre\classes, hibernate.current_session_context_class=thread, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_211-b12, user.name=pc, connection.driver_class=com.mysql.jdbc.Driver, current_session_context_class=thread, user.language=fr, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_211\jre\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.8.0_211, user.timezone=Europe/Paris, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_211\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=FR, connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, java.home=C:\Program Files\Java\jdk1.8.0_211\jre, java.vm.info=mixed mode, os.version=10.0, path.separator=;, connection.password=123456, java.vm.version=25.211-b12, hibernate.connection.password=123456, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, user.script=, user.home=C:\Users\pc, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_211\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_221/bin/server;C:/Program Files/Java/jre1.8.0_221/bin;C:/Program Files/Java/jre1.8.0_221/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files\Java\jdk1.8.0_211\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;D:\_Pratique\apache-maven-3.6.1\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\pc\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\pc\AppData\Roaming\npm;C:\Users\pc\Desktop;;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=fr.formation.inti.controllers.AppService, java.class.path=C:\Users\pc\eclipse-workspace09\core\target\classes;C:\Users\pc\.m2\repository\org\hibernate\hibernate-core\4.3.4.Final\hibernate-core-4.3.4.Final.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\pc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\pc\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\pc\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\pc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;C:\Users\pc\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\pc\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\pc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\pc\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\pc\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\pc\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\pc\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, sun.os.patch.level=, connection.pool_size=1, java.io.tmpdir=C:\Users\pc\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_211\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\pc\eclipse-workspace09\core, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.pool_size=1, hibernate.show_sql=true}
Skipping JACC integration as it was not enabled
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for collection: fr.formation.inti.entities.Department.employees
 Row insert: update EMPLOYEE set DEPT_ID=? where EMP_ID=?
 Row update: update EMPLOYEE set  where EMP_ID=?
 Row delete: update EMPLOYEE set DEPT_ID=null where DEPT_ID=? and EMP_ID=?
 One-shot delete: update EMPLOYEE set DEPT_ID=null where DEPT_ID=?
Static SQL for collection: fr.formation.inti.entities.Employee.employees
 Row insert: update EMPLOYEE set SUPERIOR_EMP_ID=? where EMP_ID=?
 Row update: update EMPLOYEE set  where EMP_ID=?
 Row delete: update EMPLOYEE set SUPERIOR_EMP_ID=null where SUPERIOR_EMP_ID=? and EMP_ID=?
 One-shot delete: update EMPLOYEE set SUPERIOR_EMP_ID=null where SUPERIOR_EMP_ID=?
Static SQL for entity: fr.formation.inti.entities.Employee
 Version select: select EMP_ID from EMPLOYEE where EMP_ID =?
 Snapshot select: select employee_.EMP_ID, employee_.DEPT_ID as DEPT_ID7_1_, employee_.END_DATE as END_DATE2_1_, employee_.FIRST_NAME as FIRST_NA3_1_, employee_.LAST_NAME as LAST_NAM4_1_, employee_.SUPERIOR_EMP_ID as SUPERIOR8_1_, employee_.START_DATE as START_DA5_1_, employee_.title as title6_1_ from EMPLOYEE employee_ where employee_.EMP_ID=?
 Insert 0: insert into EMPLOYEE (DEPT_ID, END_DATE, FIRST_NAME, LAST_NAME, SUPERIOR_EMP_ID, START_DATE, title, EMP_ID) values (?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update EMPLOYEE set DEPT_ID=?, END_DATE=?, FIRST_NAME=?, LAST_NAME=?, SUPERIOR_EMP_ID=?, START_DATE=?, title=? where EMP_ID=?
 Delete 0: delete from EMPLOYEE where EMP_ID=?
 Identity insert: insert into EMPLOYEE (DEPT_ID, END_DATE, FIRST_NAME, LAST_NAME, SUPERIOR_EMP_ID, START_DATE, title) values (?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@366ac49b]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [NONE]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56f0cc85]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [READ]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cc44ad]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [UPGRADE]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1477089c]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [UPGRADE_NOWAIT]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63dd899]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [UPGRADE_SKIPLOCKED]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75cd8043]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [FORCE]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b202a3a]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [PESSIMISTIC_READ]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9ef8eb7]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [PESSIMISTIC_WRITE]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ee660fb]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [PESSIMISTIC_FORCE_INCREMENT]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4535b6d5]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [OPTIMISTIC]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4372b9b6]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [OPTIMISTIC_FORCE_INCREMENT]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Static select for action ACTION_MERGE on entity fr.formation.inti.entities.Employee: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Static select for action ACTION_REFRESH on entity fr.formation.inti.entities.Employee: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Static SQL for entity: fr.formation.inti.entities.Department
 Version select: select DEPT_ID from DEPARTMENT where DEPT_ID =?
 Snapshot select: select department_.DEPT_ID, department_.NAME as NAME2_0_ from DEPARTMENT department_ where department_.DEPT_ID=?
 Insert 0: insert into DEPARTMENT (NAME, DEPT_ID) values (?, ?)
 Update 0: update DEPARTMENT set NAME=? where DEPT_ID=?
 Delete 0: delete from DEPARTMENT where DEPT_ID=?
 Identity insert: insert into DEPARTMENT (NAME) values (?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b41e4dd]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [NONE]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74960bfa]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [READ]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40844aab]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [UPGRADE]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b619d14]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [UPGRADE_NOWAIT]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@447a020]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [UPGRADE_SKIPLOCKED]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28e8dde3]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [FORCE]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54dcfa5a]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [PESSIMISTIC_READ]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@767e20cf]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [PESSIMISTIC_WRITE]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@301ec38b]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [PESSIMISTIC_FORCE_INCREMENT]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10ded6a9]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [OPTIMISTIC]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a194c39]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [OPTIMISTIC_FORCE_INCREMENT]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Static select for action ACTION_MERGE on entity fr.formation.inti.entities.Department: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Static select for action ACTION_REFRESH on entity fr.formation.inti.entities.Department: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@340b9973]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56113384]
Visiting attribute path : department
Property path deemed to be circular : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=fr.formation.inti.entities.Department.employees)
    - Returns
       - CollectionReturnImpl(collection=fr.formation.inti.entities.Department.employees, querySpaceUid=<gen:0>, path=[fr.formation.inti.entities.Department.employees])
          - (collection element) CollectionFetchableElementEntityGraph(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:1>, path=[fr.formation.inti.entities.Department.employees].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=fr.formation.inti.entities.Department.employees)
          - SQL table alias mapping - employees0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID7_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - EMP_ID1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=fr.formation.inti.entities.Employee)
                - SQL table alias mapping - employees0_
                - alias suffix - 1_
                - suffixed key columns - {EMP_ID1_1_1_}

Static select for collection fr.formation.inti.entities.Department.employees: select employees0_.DEPT_ID as DEPT_ID7_0_0_, employees0_.EMP_ID as EMP_ID1_1_0_, employees0_.EMP_ID as EMP_ID1_1_1_, employees0_.DEPT_ID as DEPT_ID7_1_1_, employees0_.END_DATE as END_DATE2_1_1_, employees0_.FIRST_NAME as FIRST_NA3_1_1_, employees0_.LAST_NAME as LAST_NAM4_1_1_, employees0_.SUPERIOR_EMP_ID as SUPERIOR8_1_1_, employees0_.START_DATE as START_DA5_1_1_, employees0_.title as title6_1_1_ from EMPLOYEE employees0_ where employees0_.DEPT_ID=? order by employees0_.FIRST_NAME desc
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f9678e1]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c4ed84]
Visiting attribute path : department
Visiting attribute path : employees
Property path deemed to be circular : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Property path deemed to be circular : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=fr.formation.inti.entities.Employee.employees)
    - Returns
       - CollectionReturnImpl(collection=fr.formation.inti.entities.Employee.employees, querySpaceUid=<gen:0>, path=[fr.formation.inti.entities.Employee.employees])
          - (collection element) CollectionFetchableElementEntityGraph(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:1>, path=[fr.formation.inti.entities.Employee.employees].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=fr.formation.inti.entities.Employee.employees)
          - SQL table alias mapping - employees0_
          - alias suffix - 0_
          - suffixed key columns - {SUPERIOR8_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - EMP_ID1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=fr.formation.inti.entities.Employee)
                - SQL table alias mapping - employees0_
                - alias suffix - 1_
                - suffixed key columns - {EMP_ID1_1_1_}

Static select for collection fr.formation.inti.entities.Employee.employees: select employees0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employees0_.EMP_ID as EMP_ID1_1_0_, employees0_.EMP_ID as EMP_ID1_1_1_, employees0_.DEPT_ID as DEPT_ID7_1_1_, employees0_.END_DATE as END_DATE2_1_1_, employees0_.FIRST_NAME as FIRST_NA3_1_1_, employees0_.LAST_NAME as LAST_NAM4_1_1_, employees0_.SUPERIOR_EMP_ID as SUPERIOR8_1_1_, employees0_.START_DATE as START_DA5_1_1_, employees0_.title as title6_1_1_ from EMPLOYEE employees0_ where employees0_.SUPERIOR_EMP_ID=?
Registering SessionFactory: 557abb56-44dc-4d85-b950-e745b2d36081 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: fr.formation.inti.entities.Department
Resolving reference to class: fr.formation.inti.entities.Employee
HHH000261: Table found: bd.department
HHH000037: Columns: [name, dept_id]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: bd.employee
HHH000037: Columns: [end_date, last_name, assigned_branch_id, title, dept_id, first_name, superior_emp_id, emp_id, start_date]
HHH000108: Foreign keys: [employee_employee_fk, employee_department_fk, employee_branch_fk]
HHH000126: Indexes: [employee_employee_fk, employee_department_fk, employee_branch_fk, primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
from Employee
parse() - HQL: from fr.formation.inti.entities.Employee
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'fr'
                |  |  |  \-[IDENT] Node: 'formation'
                |  |  \-[IDENT] Node: 'inti'
                |  \-[IDENT] Node: 'entities'
                \-[IDENT] Node: 'Employee'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : fr.formation.inti.entities.Employee (<no alias>) -> employee0_
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( FromClause{level=1} EMPLOYEE employee0_ ) )
Derived SELECT clause created.
Using FROM fragment [EMPLOYEE employee0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EMPLOYEE)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'employee0_.EMP_ID as EMP_ID1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=EMPLOYEE,tableAlias=employee0_,origin=null,columns={,className=fr.formation.inti.entities.Employee}}}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.DEPT_ID as DEPT_ID7_1_, employee0_.END_DATE as END_DATE2_1_, employee0_.FIRST_NAME as FIRST_NA3_1_, employee0_.LAST_NAME as LAST_NAM4_1_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_, employee0_.START_DATE as START_DA5_1_, employee0_.title as title6_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'EMPLOYEE employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=EMPLOYEE,tableAlias=employee0_,origin=null,columns={,className=fr.formation.inti.entities.Employee}}

throwQueryException() : no errors
HQL: from fr.formation.inti.entities.Employee
SQL: select employee0_.EMP_ID as EMP_ID1_1_, employee0_.DEPT_ID as DEPT_ID7_1_, employee0_.END_DATE as END_DATE2_1_, employee0_.FIRST_NAME as FIRST_NA3_1_, employee0_.LAST_NAME as LAST_NAM4_1_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_, employee0_.START_DATE as START_DA5_1_, employee0_.title as title6_1_ from EMPLOYEE employee0_
throwQueryException() : no errors
select employee0_.EMP_ID as EMP_ID1_1_, employee0_.DEPT_ID as DEPT_ID7_1_, employee0_.END_DATE as END_DATE2_1_, employee0_.FIRST_NAME as FIRST_NA3_1_, employee0_.LAST_NAME as LAST_NAM4_1_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_, employee0_.START_DATE as START_DA5_1_, employee0_.title as title6_1_ from EMPLOYEE employee0_
Obtaining JDBC connection
Obtained JDBC connection
Result set row: 0
Result row: EntityKey[fr.formation.inti.entities.Employee#1]
Result set row: 1
Result row: EntityKey[fr.formation.inti.entities.Employee#2]
Result set row: 2
Result row: EntityKey[fr.formation.inti.entities.Employee#3]
Result set row: 3
Result row: EntityKey[fr.formation.inti.entities.Employee#4]
Result set row: 4
Result row: EntityKey[fr.formation.inti.entities.Employee#5]
Result set row: 5
Result row: EntityKey[fr.formation.inti.entities.Employee#6]
Result set row: 6
Result row: EntityKey[fr.formation.inti.entities.Employee#7]
Result set row: 7
Result row: EntityKey[fr.formation.inti.entities.Employee#8]
Result set row: 8
Result row: EntityKey[fr.formation.inti.entities.Employee#9]
Result set row: 9
Result row: EntityKey[fr.formation.inti.entities.Employee#10]
Result set row: 10
Result row: EntityKey[fr.formation.inti.entities.Employee#11]
Result set row: 11
Result row: EntityKey[fr.formation.inti.entities.Employee#12]
Result set row: 12
Result row: EntityKey[fr.formation.inti.entities.Employee#13]
Result set row: 13
Result row: EntityKey[fr.formation.inti.entities.Employee#14]
Result set row: 14
Result row: EntityKey[fr.formation.inti.entities.Employee#15]
Result set row: 15
Result row: EntityKey[fr.formation.inti.entities.Employee#16]
Result set row: 16
Result row: EntityKey[fr.formation.inti.entities.Employee#17]
Result set row: 17
Result row: EntityKey[fr.formation.inti.entities.Employee#18]
Result set row: 18
Result row: EntityKey[fr.formation.inti.entities.Employee#24]
Result set row: 19
Result row: EntityKey[fr.formation.inti.entities.Employee#25]
Resolving associations for [fr.formation.inti.entities.Employee#1]
Done materializing entity [fr.formation.inti.entities.Employee#1]
Resolving associations for [fr.formation.inti.entities.Employee#2]
Done materializing entity [fr.formation.inti.entities.Employee#2]
Resolving associations for [fr.formation.inti.entities.Employee#3]
Done materializing entity [fr.formation.inti.entities.Employee#3]
Resolving associations for [fr.formation.inti.entities.Employee#4]
Done materializing entity [fr.formation.inti.entities.Employee#4]
Resolving associations for [fr.formation.inti.entities.Employee#5]
Done materializing entity [fr.formation.inti.entities.Employee#5]
Resolving associations for [fr.formation.inti.entities.Employee#6]
Done materializing entity [fr.formation.inti.entities.Employee#6]
Resolving associations for [fr.formation.inti.entities.Employee#7]
Done materializing entity [fr.formation.inti.entities.Employee#7]
Resolving associations for [fr.formation.inti.entities.Employee#8]
Done materializing entity [fr.formation.inti.entities.Employee#8]
Resolving associations for [fr.formation.inti.entities.Employee#9]
Done materializing entity [fr.formation.inti.entities.Employee#9]
Resolving associations for [fr.formation.inti.entities.Employee#10]
Done materializing entity [fr.formation.inti.entities.Employee#10]
Resolving associations for [fr.formation.inti.entities.Employee#11]
Done materializing entity [fr.formation.inti.entities.Employee#11]
Resolving associations for [fr.formation.inti.entities.Employee#12]
Done materializing entity [fr.formation.inti.entities.Employee#12]
Resolving associations for [fr.formation.inti.entities.Employee#13]
Done materializing entity [fr.formation.inti.entities.Employee#13]
Resolving associations for [fr.formation.inti.entities.Employee#14]
Done materializing entity [fr.formation.inti.entities.Employee#14]
Resolving associations for [fr.formation.inti.entities.Employee#15]
Done materializing entity [fr.formation.inti.entities.Employee#15]
Resolving associations for [fr.formation.inti.entities.Employee#16]
Done materializing entity [fr.formation.inti.entities.Employee#16]
Resolving associations for [fr.formation.inti.entities.Employee#17]
Done materializing entity [fr.formation.inti.entities.Employee#17]
Resolving associations for [fr.formation.inti.entities.Employee#18]
Done materializing entity [fr.formation.inti.entities.Employee#18]
Resolving associations for [fr.formation.inti.entities.Employee#24]
Done materializing entity [fr.formation.inti.entities.Employee#24]
Resolving associations for [fr.formation.inti.entities.Employee#25]
Done materializing entity [fr.formation.inti.entities.Employee#25]
Releasing JDBC connection
Released JDBC connection
Connection pool now considered primed; min-size will be maintained
Connection pool now considered primed; min-size will be maintained
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding type registration boolean -> org.hibernate.type.BooleanType@1ee0005
Adding type registration boolean -> org.hibernate.type.BooleanType@1ee0005
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ee0005
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@626b2d4a
Adding type registration true_false -> org.hibernate.type.TrueFalseType@123a439b
Adding type registration yes_no -> org.hibernate.type.YesNoType@36aa7bc2
Adding type registration byte -> org.hibernate.type.ByteType@4926097b
Adding type registration byte -> org.hibernate.type.ByteType@4926097b
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4926097b
Adding type registration character -> org.hibernate.type.CharacterType@71dac704
Adding type registration char -> org.hibernate.type.CharacterType@71dac704
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@71dac704
Adding type registration short -> org.hibernate.type.ShortType@606d8acf
Adding type registration short -> org.hibernate.type.ShortType@606d8acf
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@606d8acf
Adding type registration integer -> org.hibernate.type.IntegerType@5fdef03a
Adding type registration int -> org.hibernate.type.IntegerType@5fdef03a
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5fdef03a
Adding type registration long -> org.hibernate.type.LongType@4aa8f0b4
Adding type registration long -> org.hibernate.type.LongType@4aa8f0b4
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4aa8f0b4
Adding type registration float -> org.hibernate.type.FloatType@16f65612
Adding type registration float -> org.hibernate.type.FloatType@16f65612
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@16f65612
Adding type registration double -> org.hibernate.type.DoubleType@21588809
Adding type registration double -> org.hibernate.type.DoubleType@21588809
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@21588809
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2437c6dc
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2437c6dc
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@383534aa
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@383534aa
Adding type registration string -> org.hibernate.type.StringType@1055e4af
Adding type registration java.lang.String -> org.hibernate.type.StringType@1055e4af
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1c6b6478
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@43556938
Adding type registration url -> org.hibernate.type.UrlType@3abfe836
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3abfe836
Adding type registration date -> org.hibernate.type.DateType@68f7aae2
Adding type registration java.sql.Date -> org.hibernate.type.DateType@68f7aae2
Adding type registration time -> org.hibernate.type.TimeType@7cef4e59
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7cef4e59
Adding type registration timestamp -> org.hibernate.type.TimestampType@555590
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@555590
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@555590
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3c679bde
Adding type registration calendar -> org.hibernate.type.CalendarType@12f40c25
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@12f40c25
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@12f40c25
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3419866c
Adding type registration locale -> org.hibernate.type.LocaleType@6842775d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6842775d
Adding type registration currency -> org.hibernate.type.CurrencyType@3f102e87
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3f102e87
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2280cdac
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2280cdac
Adding type registration class -> org.hibernate.type.ClassType@4ca8195f
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4ca8195f
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@66133adc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@66133adc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@24273305
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@33e5ccce
Adding type registration binary -> org.hibernate.type.BinaryType@6956de9
Adding type registration byte[] -> org.hibernate.type.BinaryType@6956de9
Adding type registration [B -> org.hibernate.type.BinaryType@6956de9
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@de0a01f
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@de0a01f
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@de0a01f
Adding type registration image -> org.hibernate.type.ImageType@5d3411d
Adding type registration characters -> org.hibernate.type.CharArrayType@2be94b0f
Adding type registration char[] -> org.hibernate.type.CharArrayType@2be94b0f
Adding type registration [C -> org.hibernate.type.CharArrayType@2be94b0f
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@47d384ee
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@47d384ee
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@47d384ee
Adding type registration text -> org.hibernate.type.TextType@1bc6a36e
Adding type registration ntext -> org.hibernate.type.NTextType@71e7a66b
Adding type registration blob -> org.hibernate.type.BlobType@233c0b17
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@233c0b17
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@33a10788
Adding type registration clob -> org.hibernate.type.ClobType@35851384
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@35851384
Adding type registration nclob -> org.hibernate.type.NClobType@45c8e616
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@45c8e616
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7cf10a6f
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5ba23b66
Adding type registration serializable -> org.hibernate.type.SerializableType@7d417077
Adding type registration object -> org.hibernate.type.ObjectType@6bdf28bb
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bdf28bb
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e580929
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1cd072a9
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7c75222b
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4c203ea1
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@27f674d
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1d251891
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@48140564
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@58ceff1
HCANN000001: Hibernate Commons Annotations {4.0.4.Final}
HHH000412: Hibernate Core {4.3.4.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH000043: Configuring from resource: /hibernate.cfg.xml
HHH000040: Configuration resource: /hibernate.cfg.xml
Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
connection.driver_class=com.mysql.jdbc.Driver
connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC
connection.username=root
connection.password=123456
hibernate.enable_lazy_load_no_trans=true
connection.pool_size=5
dialect=org.hibernate.dialect.MySQLDialect
hibernate.current_session_context_class=thread
show_sql=true
hibernate.hbm2ddl.auto=update
Session-factory config [null] named class [fr.formation.inti.entities.Employee] for mapping
Session-factory config [null] named class [fr.formation.inti.entities.Department] for mapping
HHH000041: Configured SessionFactory: null
Properties: {java.vendor=Oracle Corporation, show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_211\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_211\jre\classes, hibernate.current_session_context_class=thread, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_211-b12, user.name=pc, connection.driver_class=com.mysql.jdbc.Driver, user.language=fr, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_211\jre\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.8.0_211, user.timezone=Europe/Paris, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_211\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=FR, connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, java.home=C:\Program Files\Java\jdk1.8.0_211\jre, java.vm.info=mixed mode, os.version=10.0, path.separator=;, connection.password=123456, java.vm.version=25.211-b12, hibernate.connection.password=123456, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, user.script=, user.home=C:\Users\pc, hibernate.enable_lazy_load_no_trans=true, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_211\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_221/bin/server;C:/Program Files/Java/jre1.8.0_221/bin;C:/Program Files/Java/jre1.8.0_221/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files\Java\jdk1.8.0_211\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;D:\_Pratique\apache-maven-3.6.1\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\pc\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\pc\AppData\Roaming\npm;C:\Users\pc\Desktop;;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=fr.formation.inti.controllers.AppService, java.class.path=C:\Users\pc\eclipse-workspace09\core\target\classes;C:\Users\pc\.m2\repository\org\hibernate\hibernate-core\4.3.4.Final\hibernate-core-4.3.4.Final.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\pc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\pc\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\pc\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\pc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;C:\Users\pc\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\pc\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\pc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\pc\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\pc\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\pc\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\pc\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, sun.os.patch.level=, connection.pool_size=5, java.io.tmpdir=C:\Users\pc\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_211\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\pc\eclipse-workspace09\core, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true, hibernate.connection.pool_size=5}
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Preparing to build session factory with filters : {}
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/bd?serverTimezone=UTC]
HHH000046: Connection properties: {user=root, password=123456}
HHH000006: Autocommit mode: false
HHH000115: Hibernate connection pool size: 5 (min=1)
Initializing Connection pool with 1 Connections
Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: fr.formation.inti.entities.Employee
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name Employee
Bind entity fr.formation.inti.entities.Employee on table EMPLOYEE
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=EMP_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property empId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:empId]
building SimpleValue for empId
Building property empId
Binding column: Ejb3JoinColumn{logicalColumnName='DEPT_ID', referencedColumn='DEPT_ID', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=department, insertable=true, updatable=true, unique=false}
Building property department
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='manager'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=employees, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=employees_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='employees_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='manager'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='manager'}
Collection role: fr.formation.inti.entities.Employee.employees
Building property employees
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=END_DATE, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property endDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:endDate]
building SimpleValue for endDate
Building property endDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=FIRST_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property firstName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:firstName]
building SimpleValue for firstName
Building property firstName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=LAST_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:lastName]
building SimpleValue for lastName
Building property lastName
Binding column: Ejb3JoinColumn{logicalColumnName='SUPERIOR_EMP_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=manager, insertable=true, updatable=true, unique=false}
Building property manager
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=START_DATE, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property startDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:startDate]
building SimpleValue for startDate
Building property startDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:title]
building SimpleValue for title
Building property title
Binding entity from annotated class: fr.formation.inti.entities.Department
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name Department
Bind entity fr.formation.inti.entities.Department on table DEPARTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=DEPT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property deptId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Department:deptId]
building SimpleValue for deptId
Building property deptId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=employees, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=employees_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='employees_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
Collection role: fr.formation.inti.entities.Department.employees
Building property employees
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Department:name]
building SimpleValue for name
Building property name
Starting fillSimpleValue for empId
Starting fillSimpleValue for endDate
Starting fillSimpleValue for firstName
Starting fillSimpleValue for lastName
Starting fillSimpleValue for startDate
Starting fillSimpleValue for title
Starting fillSimpleValue for deptId
Starting fillSimpleValue for name
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: fr.formation.inti.entities.Employee.employees
Binding a OneToMany: fr.formation.inti.entities.Employee.employees through a foreign key
Mapping collection: fr.formation.inti.entities.Employee.employees -> EMPLOYEE
Retrieving property fr.formation.inti.entities.Employee.manager
Mapped collection key: SUPERIOR_EMP_ID, one-to-many: fr.formation.inti.entities.Employee
Second pass for collection: fr.formation.inti.entities.Department.employees
Binding a OneToMany: fr.formation.inti.entities.Department.employees through a foreign key
Mapping collection: fr.formation.inti.entities.Department.employees -> EMPLOYEE
Retrieving property fr.formation.inti.entities.Employee.department
Mapped collection key: DEPT_ID, one-to-many: fr.formation.inti.entities.Employee
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: fr.formation.inti.entities.Department
Resolving reference to class: fr.formation.inti.entities.Employee
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000399: Using default transaction strategy (direct JDBC transactions)
Using BatchFetchStyle : LEGACY
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Default null ordering: none
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: disabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : enabled
JTA Track by Thread: enabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_211\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_211\jre\classes, hibernate.current_session_context_class=thread, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_211-b12, user.name=pc, connection.driver_class=com.mysql.jdbc.Driver, user.language=fr, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_211\jre\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.8.0_211, user.timezone=Europe/Paris, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_211\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=FR, connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, java.home=C:\Program Files\Java\jdk1.8.0_211\jre, java.vm.info=mixed mode, os.version=10.0, path.separator=;, connection.password=123456, java.vm.version=25.211-b12, hibernate.connection.password=123456, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, user.script=, user.home=C:\Users\pc, hibernate.enable_lazy_load_no_trans=true, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_211\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_221/bin/server;C:/Program Files/Java/jre1.8.0_221/bin;C:/Program Files/Java/jre1.8.0_221/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files\Java\jdk1.8.0_211\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;D:\_Pratique\apache-maven-3.6.1\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\pc\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\pc\AppData\Roaming\npm;C:\Users\pc\Desktop;;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=fr.formation.inti.controllers.AppService, java.class.path=C:\Users\pc\eclipse-workspace09\core\target\classes;C:\Users\pc\.m2\repository\org\hibernate\hibernate-core\4.3.4.Final\hibernate-core-4.3.4.Final.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\pc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\pc\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\pc\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\pc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;C:\Users\pc\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\pc\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\pc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\pc\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\pc\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\pc\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\pc\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, sun.os.patch.level=, connection.pool_size=5, java.io.tmpdir=C:\Users\pc\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_211\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\pc\eclipse-workspace09\core, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.pool_size=5, hibernate.show_sql=true}
Skipping JACC integration as it was not enabled
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for collection: fr.formation.inti.entities.Department.employees
 Row insert: update EMPLOYEE set DEPT_ID=? where EMP_ID=?
 Row update: update EMPLOYEE set  where EMP_ID=?
 Row delete: update EMPLOYEE set DEPT_ID=null where DEPT_ID=? and EMP_ID=?
 One-shot delete: update EMPLOYEE set DEPT_ID=null where DEPT_ID=?
Static SQL for collection: fr.formation.inti.entities.Employee.employees
 Row insert: update EMPLOYEE set SUPERIOR_EMP_ID=? where EMP_ID=?
 Row update: update EMPLOYEE set  where EMP_ID=?
 Row delete: update EMPLOYEE set SUPERIOR_EMP_ID=null where SUPERIOR_EMP_ID=? and EMP_ID=?
 One-shot delete: update EMPLOYEE set SUPERIOR_EMP_ID=null where SUPERIOR_EMP_ID=?
Static SQL for entity: fr.formation.inti.entities.Employee
 Version select: select EMP_ID from EMPLOYEE where EMP_ID =?
 Snapshot select: select employee_.EMP_ID, employee_.DEPT_ID as DEPT_ID7_1_, employee_.END_DATE as END_DATE2_1_, employee_.FIRST_NAME as FIRST_NA3_1_, employee_.LAST_NAME as LAST_NAM4_1_, employee_.SUPERIOR_EMP_ID as SUPERIOR8_1_, employee_.START_DATE as START_DA5_1_, employee_.title as title6_1_ from EMPLOYEE employee_ where employee_.EMP_ID=?
 Insert 0: insert into EMPLOYEE (DEPT_ID, END_DATE, FIRST_NAME, LAST_NAME, SUPERIOR_EMP_ID, START_DATE, title, EMP_ID) values (?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update EMPLOYEE set DEPT_ID=?, END_DATE=?, FIRST_NAME=?, LAST_NAME=?, SUPERIOR_EMP_ID=?, START_DATE=?, title=? where EMP_ID=?
 Delete 0: delete from EMPLOYEE where EMP_ID=?
 Identity insert: insert into EMPLOYEE (DEPT_ID, END_DATE, FIRST_NAME, LAST_NAME, SUPERIOR_EMP_ID, START_DATE, title) values (?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66c61024]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [NONE]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34158c08]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [READ]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52c3cb31]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [UPGRADE]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53941c2f]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [UPGRADE_NOWAIT]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21fd5faa]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [UPGRADE_SKIPLOCKED]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5460cf3a]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [FORCE]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e6a5539]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [PESSIMISTIC_READ]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d025197]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [PESSIMISTIC_WRITE]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e4204e2]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [PESSIMISTIC_FORCE_INCREMENT]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@740d2e78]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [OPTIMISTIC]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72437d8d]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [OPTIMISTIC_FORCE_INCREMENT]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Static select for action ACTION_MERGE on entity fr.formation.inti.entities.Employee: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Static select for action ACTION_REFRESH on entity fr.formation.inti.entities.Employee: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Static SQL for entity: fr.formation.inti.entities.Department
 Version select: select DEPT_ID from DEPARTMENT where DEPT_ID =?
 Snapshot select: select department_.DEPT_ID, department_.NAME as NAME2_0_ from DEPARTMENT department_ where department_.DEPT_ID=?
 Insert 0: insert into DEPARTMENT (NAME, DEPT_ID) values (?, ?)
 Update 0: update DEPARTMENT set NAME=? where DEPT_ID=?
 Delete 0: delete from DEPARTMENT where DEPT_ID=?
 Identity insert: insert into DEPARTMENT (NAME) values (?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ce1d6d0]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [NONE]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f3f02ee]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [READ]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dcb4f5f]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [UPGRADE]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16ce702d]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [UPGRADE_NOWAIT]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ca20101]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [UPGRADE_SKIPLOCKED]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a5ecce3]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [FORCE]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ea6e30c]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [PESSIMISTIC_READ]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dcd168a]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [PESSIMISTIC_WRITE]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21a21c64]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [PESSIMISTIC_FORCE_INCREMENT]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42bc14c1]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [OPTIMISTIC]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62ef27a8]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [OPTIMISTIC_FORCE_INCREMENT]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Static select for action ACTION_MERGE on entity fr.formation.inti.entities.Department: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Static select for action ACTION_REFRESH on entity fr.formation.inti.entities.Department: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@74bada02]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ad3381f]
Visiting attribute path : department
Property path deemed to be circular : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=fr.formation.inti.entities.Department.employees)
    - Returns
       - CollectionReturnImpl(collection=fr.formation.inti.entities.Department.employees, querySpaceUid=<gen:0>, path=[fr.formation.inti.entities.Department.employees])
          - (collection element) CollectionFetchableElementEntityGraph(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:1>, path=[fr.formation.inti.entities.Department.employees].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=fr.formation.inti.entities.Department.employees)
          - SQL table alias mapping - employees0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID7_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - EMP_ID1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=fr.formation.inti.entities.Employee)
                - SQL table alias mapping - employees0_
                - alias suffix - 1_
                - suffixed key columns - {EMP_ID1_1_1_}

Static select for collection fr.formation.inti.entities.Department.employees: select employees0_.DEPT_ID as DEPT_ID7_0_0_, employees0_.EMP_ID as EMP_ID1_1_0_, employees0_.EMP_ID as EMP_ID1_1_1_, employees0_.DEPT_ID as DEPT_ID7_1_1_, employees0_.END_DATE as END_DATE2_1_1_, employees0_.FIRST_NAME as FIRST_NA3_1_1_, employees0_.LAST_NAME as LAST_NAM4_1_1_, employees0_.SUPERIOR_EMP_ID as SUPERIOR8_1_1_, employees0_.START_DATE as START_DA5_1_1_, employees0_.title as title6_1_1_ from EMPLOYEE employees0_ where employees0_.DEPT_ID=? order by employees0_.FIRST_NAME desc
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@33fe57a9]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4982cc36]
Visiting attribute path : department
Visiting attribute path : employees
Property path deemed to be circular : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Property path deemed to be circular : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=fr.formation.inti.entities.Employee.employees)
    - Returns
       - CollectionReturnImpl(collection=fr.formation.inti.entities.Employee.employees, querySpaceUid=<gen:0>, path=[fr.formation.inti.entities.Employee.employees])
          - (collection element) CollectionFetchableElementEntityGraph(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:1>, path=[fr.formation.inti.entities.Employee.employees].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=fr.formation.inti.entities.Employee.employees)
          - SQL table alias mapping - employees0_
          - alias suffix - 0_
          - suffixed key columns - {SUPERIOR8_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - EMP_ID1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=fr.formation.inti.entities.Employee)
                - SQL table alias mapping - employees0_
                - alias suffix - 1_
                - suffixed key columns - {EMP_ID1_1_1_}

Static select for collection fr.formation.inti.entities.Employee.employees: select employees0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employees0_.EMP_ID as EMP_ID1_1_0_, employees0_.EMP_ID as EMP_ID1_1_1_, employees0_.DEPT_ID as DEPT_ID7_1_1_, employees0_.END_DATE as END_DATE2_1_1_, employees0_.FIRST_NAME as FIRST_NA3_1_1_, employees0_.LAST_NAME as LAST_NAM4_1_1_, employees0_.SUPERIOR_EMP_ID as SUPERIOR8_1_1_, employees0_.START_DATE as START_DA5_1_1_, employees0_.title as title6_1_1_ from EMPLOYEE employees0_ where employees0_.SUPERIOR_EMP_ID=?
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@22295ec4
Registering SessionFactory: 62351f19-492f-4719-a1e1-3958a2f251b3 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: fr.formation.inti.entities.Department
Resolving reference to class: fr.formation.inti.entities.Employee
HHH000261: Table found: bd.department
HHH000037: Columns: [name, dept_id]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: bd.employee
HHH000037: Columns: [end_date, last_name, assigned_branch_id, title, dept_id, first_name, superior_emp_id, emp_id, start_date]
HHH000108: Foreign keys: [employee_employee_fk, employee_department_fk, employee_branch_fk]
HHH000126: Indexes: [employee_employee_fk, employee_department_fk, employee_branch_fk, primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Adding type registration boolean -> org.hibernate.type.BooleanType@1ee0005
Adding type registration boolean -> org.hibernate.type.BooleanType@1ee0005
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ee0005
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@626b2d4a
Adding type registration true_false -> org.hibernate.type.TrueFalseType@123a439b
Adding type registration yes_no -> org.hibernate.type.YesNoType@36aa7bc2
Adding type registration byte -> org.hibernate.type.ByteType@4926097b
Adding type registration byte -> org.hibernate.type.ByteType@4926097b
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4926097b
Adding type registration character -> org.hibernate.type.CharacterType@71dac704
Adding type registration char -> org.hibernate.type.CharacterType@71dac704
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@71dac704
Adding type registration short -> org.hibernate.type.ShortType@606d8acf
Adding type registration short -> org.hibernate.type.ShortType@606d8acf
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@606d8acf
Adding type registration integer -> org.hibernate.type.IntegerType@5fdef03a
Adding type registration int -> org.hibernate.type.IntegerType@5fdef03a
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5fdef03a
Adding type registration long -> org.hibernate.type.LongType@4aa8f0b4
Adding type registration long -> org.hibernate.type.LongType@4aa8f0b4
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4aa8f0b4
Adding type registration float -> org.hibernate.type.FloatType@16f65612
Adding type registration float -> org.hibernate.type.FloatType@16f65612
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@16f65612
Adding type registration double -> org.hibernate.type.DoubleType@21588809
Adding type registration double -> org.hibernate.type.DoubleType@21588809
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@21588809
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2437c6dc
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2437c6dc
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@383534aa
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@383534aa
Adding type registration string -> org.hibernate.type.StringType@1055e4af
Adding type registration java.lang.String -> org.hibernate.type.StringType@1055e4af
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1c6b6478
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@43556938
Adding type registration url -> org.hibernate.type.UrlType@3abfe836
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3abfe836
Adding type registration date -> org.hibernate.type.DateType@68f7aae2
Adding type registration java.sql.Date -> org.hibernate.type.DateType@68f7aae2
Adding type registration time -> org.hibernate.type.TimeType@7cef4e59
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7cef4e59
Adding type registration timestamp -> org.hibernate.type.TimestampType@555590
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@555590
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@555590
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3c679bde
Adding type registration calendar -> org.hibernate.type.CalendarType@12f40c25
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@12f40c25
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@12f40c25
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3419866c
Adding type registration locale -> org.hibernate.type.LocaleType@6842775d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6842775d
Adding type registration currency -> org.hibernate.type.CurrencyType@3f102e87
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3f102e87
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2280cdac
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2280cdac
Adding type registration class -> org.hibernate.type.ClassType@4ca8195f
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4ca8195f
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@66133adc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@66133adc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@24273305
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@33e5ccce
Adding type registration binary -> org.hibernate.type.BinaryType@6956de9
Adding type registration byte[] -> org.hibernate.type.BinaryType@6956de9
Adding type registration [B -> org.hibernate.type.BinaryType@6956de9
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@de0a01f
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@de0a01f
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@de0a01f
Adding type registration image -> org.hibernate.type.ImageType@5d3411d
Adding type registration characters -> org.hibernate.type.CharArrayType@2be94b0f
Adding type registration char[] -> org.hibernate.type.CharArrayType@2be94b0f
Adding type registration [C -> org.hibernate.type.CharArrayType@2be94b0f
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@47d384ee
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@47d384ee
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@47d384ee
Adding type registration text -> org.hibernate.type.TextType@1bc6a36e
Adding type registration ntext -> org.hibernate.type.NTextType@71e7a66b
Adding type registration blob -> org.hibernate.type.BlobType@233c0b17
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@233c0b17
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@33a10788
Adding type registration clob -> org.hibernate.type.ClobType@35851384
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@35851384
Adding type registration nclob -> org.hibernate.type.NClobType@45c8e616
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@45c8e616
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7cf10a6f
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5ba23b66
Adding type registration serializable -> org.hibernate.type.SerializableType@7d417077
Adding type registration object -> org.hibernate.type.ObjectType@6bdf28bb
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bdf28bb
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@66565121
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2fc6f97f
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d2ee678
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6179e425
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@35f26e72
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2d6764b2
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@67304a40
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@49c6c24f
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH000043: Configuring from resource: /hibernate.cfg.xml
HHH000040: Configuration resource: /hibernate.cfg.xml
Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
connection.driver_class=com.mysql.jdbc.Driver
connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC
connection.username=root
connection.password=123456
hibernate.enable_lazy_load_no_trans=true
connection.pool_size=5
dialect=org.hibernate.dialect.MySQLDialect
hibernate.current_session_context_class=thread
show_sql=true
hibernate.hbm2ddl.auto=update
Session-factory config [null] named class [fr.formation.inti.entities.Employee] for mapping
Session-factory config [null] named class [fr.formation.inti.entities.Department] for mapping
HHH000041: Configured SessionFactory: null
Properties: {java.vendor=Oracle Corporation, show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_211\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_211\jre\classes, hibernate.current_session_context_class=thread, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_211-b12, user.name=pc, connection.driver_class=com.mysql.jdbc.Driver, user.language=fr, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_211\jre\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.8.0_211, user.timezone=Europe/Paris, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_211\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=FR, connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, java.home=C:\Program Files\Java\jdk1.8.0_211\jre, java.vm.info=mixed mode, os.version=10.0, path.separator=;, connection.password=123456, java.vm.version=25.211-b12, hibernate.connection.password=123456, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, user.script=, user.home=C:\Users\pc, hibernate.enable_lazy_load_no_trans=true, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_211\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_221/bin/server;C:/Program Files/Java/jre1.8.0_221/bin;C:/Program Files/Java/jre1.8.0_221/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files\Java\jdk1.8.0_211\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;D:\_Pratique\apache-maven-3.6.1\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\pc\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\pc\AppData\Roaming\npm;C:\Users\pc\Desktop;;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=fr.formation.inti.controllers.AppService, java.class.path=C:\Users\pc\eclipse-workspace09\core\target\classes;C:\Users\pc\.m2\repository\org\hibernate\hibernate-core\4.3.4.Final\hibernate-core-4.3.4.Final.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\pc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\pc\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\pc\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\pc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;C:\Users\pc\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\pc\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\pc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\pc\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\pc\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\pc\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\pc\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, sun.os.patch.level=, connection.pool_size=5, java.io.tmpdir=C:\Users\pc\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_211\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\pc\eclipse-workspace09\core, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true, hibernate.connection.pool_size=5}
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Preparing to build session factory with filters : {}
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/bd?serverTimezone=UTC]
HHH000046: Connection properties: {user=root, password=123456}
HHH000006: Autocommit mode: false
HHH000115: Hibernate connection pool size: 5 (min=1)
Initializing Connection pool with 1 Connections
Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: fr.formation.inti.entities.Employee
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name Employee
Bind entity fr.formation.inti.entities.Employee on table EMPLOYEE
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=EMP_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property empId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:empId]
building SimpleValue for empId
Building property empId
Binding column: Ejb3JoinColumn{logicalColumnName='DEPT_ID', referencedColumn='DEPT_ID', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=department, insertable=true, updatable=true, unique=false}
Building property department
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='manager'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=employees, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=employees_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='employees_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='manager'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='manager'}
Collection role: fr.formation.inti.entities.Employee.employees
Building property employees
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=END_DATE, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property endDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:endDate]
building SimpleValue for endDate
Building property endDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=FIRST_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property firstName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:firstName]
building SimpleValue for firstName
Building property firstName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=LAST_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:lastName]
building SimpleValue for lastName
Building property lastName
Binding column: Ejb3JoinColumn{logicalColumnName='SUPERIOR_EMP_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=manager, insertable=true, updatable=true, unique=false}
Building property manager
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=START_DATE, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property startDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:startDate]
building SimpleValue for startDate
Building property startDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:title]
building SimpleValue for title
Building property title
Binding entity from annotated class: fr.formation.inti.entities.Department
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name Department
Bind entity fr.formation.inti.entities.Department on table DEPARTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=DEPT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property deptId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Department:deptId]
building SimpleValue for deptId
Building property deptId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=employees, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=employees_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='employees_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
Collection role: fr.formation.inti.entities.Department.employees
Building property employees
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Department:name]
building SimpleValue for name
Building property name
Starting fillSimpleValue for empId
Starting fillSimpleValue for endDate
Starting fillSimpleValue for firstName
Starting fillSimpleValue for lastName
Starting fillSimpleValue for startDate
Starting fillSimpleValue for title
Starting fillSimpleValue for deptId
Starting fillSimpleValue for name
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: fr.formation.inti.entities.Employee.employees
Binding a OneToMany: fr.formation.inti.entities.Employee.employees through a foreign key
Mapping collection: fr.formation.inti.entities.Employee.employees -> EMPLOYEE
Retrieving property fr.formation.inti.entities.Employee.manager
Mapped collection key: SUPERIOR_EMP_ID, one-to-many: fr.formation.inti.entities.Employee
Second pass for collection: fr.formation.inti.entities.Department.employees
Binding a OneToMany: fr.formation.inti.entities.Department.employees through a foreign key
Mapping collection: fr.formation.inti.entities.Department.employees -> EMPLOYEE
Retrieving property fr.formation.inti.entities.Employee.department
Mapped collection key: DEPT_ID, one-to-many: fr.formation.inti.entities.Employee
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: fr.formation.inti.entities.Department
Resolving reference to class: fr.formation.inti.entities.Employee
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000399: Using default transaction strategy (direct JDBC transactions)
Using BatchFetchStyle : LEGACY
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Default null ordering: none
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: disabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : enabled
JTA Track by Thread: enabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_211\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_211\jre\classes, hibernate.current_session_context_class=thread, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_211-b12, user.name=pc, connection.driver_class=com.mysql.jdbc.Driver, user.language=fr, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_211\jre\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.8.0_211, user.timezone=Europe/Paris, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_211\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=FR, connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, java.home=C:\Program Files\Java\jdk1.8.0_211\jre, java.vm.info=mixed mode, os.version=10.0, path.separator=;, connection.password=123456, java.vm.version=25.211-b12, hibernate.connection.password=123456, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, user.script=, user.home=C:\Users\pc, hibernate.enable_lazy_load_no_trans=true, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_211\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_221/bin/server;C:/Program Files/Java/jre1.8.0_221/bin;C:/Program Files/Java/jre1.8.0_221/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Python27\;C:\Python27\Scripts;C:\Program Files\Java\jdk1.8.0_211\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;D:\_Pratique\apache-maven-3.6.1\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\pc\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\pc\AppData\Roaming\npm;C:\Users\pc\Desktop;;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=fr.formation.inti.controllers.AppService, java.class.path=C:\Users\pc\eclipse-workspace09\core\target\classes;C:\Users\pc\.m2\repository\org\hibernate\hibernate-core\4.3.4.Final\hibernate-core-4.3.4.Final.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\pc\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\pc\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\pc\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\pc\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\pc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;C:\Users\pc\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\pc\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\pc\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\pc\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\pc\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\pc\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\pc\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, sun.os.patch.level=, connection.pool_size=5, java.io.tmpdir=C:\Users\pc\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_211\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\pc\eclipse-workspace09\core, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.pool_size=5, hibernate.show_sql=true}
Skipping JACC integration as it was not enabled
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for collection: fr.formation.inti.entities.Department.employees
 Row insert: update EMPLOYEE set DEPT_ID=? where EMP_ID=?
 Row update: update EMPLOYEE set  where EMP_ID=?
 Row delete: update EMPLOYEE set DEPT_ID=null where DEPT_ID=? and EMP_ID=?
 One-shot delete: update EMPLOYEE set DEPT_ID=null where DEPT_ID=?
Static SQL for collection: fr.formation.inti.entities.Employee.employees
 Row insert: update EMPLOYEE set SUPERIOR_EMP_ID=? where EMP_ID=?
 Row update: update EMPLOYEE set  where EMP_ID=?
 Row delete: update EMPLOYEE set SUPERIOR_EMP_ID=null where SUPERIOR_EMP_ID=? and EMP_ID=?
 One-shot delete: update EMPLOYEE set SUPERIOR_EMP_ID=null where SUPERIOR_EMP_ID=?
Static SQL for entity: fr.formation.inti.entities.Employee
 Version select: select EMP_ID from EMPLOYEE where EMP_ID =?
 Snapshot select: select employee_.EMP_ID, employee_.DEPT_ID as DEPT_ID7_1_, employee_.END_DATE as END_DATE2_1_, employee_.FIRST_NAME as FIRST_NA3_1_, employee_.LAST_NAME as LAST_NAM4_1_, employee_.SUPERIOR_EMP_ID as SUPERIOR8_1_, employee_.START_DATE as START_DA5_1_, employee_.title as title6_1_ from EMPLOYEE employee_ where employee_.EMP_ID=?
 Insert 0: insert into EMPLOYEE (DEPT_ID, END_DATE, FIRST_NAME, LAST_NAME, SUPERIOR_EMP_ID, START_DATE, title, EMP_ID) values (?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update EMPLOYEE set DEPT_ID=?, END_DATE=?, FIRST_NAME=?, LAST_NAME=?, SUPERIOR_EMP_ID=?, START_DATE=?, title=? where EMP_ID=?
 Delete 0: delete from EMPLOYEE where EMP_ID=?
 Identity insert: insert into EMPLOYEE (DEPT_ID, END_DATE, FIRST_NAME, LAST_NAME, SUPERIOR_EMP_ID, START_DATE, title) values (?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@366ac49b]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [NONE]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56f0cc85]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [READ]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cc44ad]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [UPGRADE]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1477089c]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [UPGRADE_NOWAIT]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63dd899]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [UPGRADE_SKIPLOCKED]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75cd8043]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [FORCE]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b202a3a]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [PESSIMISTIC_READ]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9ef8eb7]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [PESSIMISTIC_WRITE]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ee660fb]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [PESSIMISTIC_FORCE_INCREMENT]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4535b6d5]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [OPTIMISTIC]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4372b9b6]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [OPTIMISTIC_FORCE_INCREMENT]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Static select for action ACTION_MERGE on entity fr.formation.inti.entities.Employee: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Static select for action ACTION_REFRESH on entity fr.formation.inti.entities.Employee: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Static SQL for entity: fr.formation.inti.entities.Department
 Version select: select DEPT_ID from DEPARTMENT where DEPT_ID =?
 Snapshot select: select department_.DEPT_ID, department_.NAME as NAME2_0_ from DEPARTMENT department_ where department_.DEPT_ID=?
 Insert 0: insert into DEPARTMENT (NAME, DEPT_ID) values (?, ?)
 Update 0: update DEPARTMENT set NAME=? where DEPT_ID=?
 Delete 0: delete from DEPARTMENT where DEPT_ID=?
 Identity insert: insert into DEPARTMENT (NAME) values (?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b41e4dd]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [NONE]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74960bfa]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [READ]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40844aab]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [UPGRADE]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b619d14]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [UPGRADE_NOWAIT]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@447a020]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [UPGRADE_SKIPLOCKED]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28e8dde3]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [FORCE]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54dcfa5a]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [PESSIMISTIC_READ]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@767e20cf]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [PESSIMISTIC_WRITE]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@301ec38b]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [PESSIMISTIC_FORCE_INCREMENT]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10ded6a9]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [OPTIMISTIC]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a194c39]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [OPTIMISTIC_FORCE_INCREMENT]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Static select for action ACTION_MERGE on entity fr.formation.inti.entities.Department: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Static select for action ACTION_REFRESH on entity fr.formation.inti.entities.Department: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@340b9973]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56113384]
Visiting attribute path : department
Property path deemed to be circular : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=fr.formation.inti.entities.Department.employees)
    - Returns
       - CollectionReturnImpl(collection=fr.formation.inti.entities.Department.employees, querySpaceUid=<gen:0>, path=[fr.formation.inti.entities.Department.employees])
          - (collection element) CollectionFetchableElementEntityGraph(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:1>, path=[fr.formation.inti.entities.Department.employees].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=fr.formation.inti.entities.Department.employees)
          - SQL table alias mapping - employees0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID7_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - EMP_ID1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=fr.formation.inti.entities.Employee)
                - SQL table alias mapping - employees0_
                - alias suffix - 1_
                - suffixed key columns - {EMP_ID1_1_1_}

Static select for collection fr.formation.inti.entities.Department.employees: select employees0_.DEPT_ID as DEPT_ID7_0_0_, employees0_.EMP_ID as EMP_ID1_1_0_, employees0_.EMP_ID as EMP_ID1_1_1_, employees0_.DEPT_ID as DEPT_ID7_1_1_, employees0_.END_DATE as END_DATE2_1_1_, employees0_.FIRST_NAME as FIRST_NA3_1_1_, employees0_.LAST_NAME as LAST_NAM4_1_1_, employees0_.SUPERIOR_EMP_ID as SUPERIOR8_1_1_, employees0_.START_DATE as START_DA5_1_1_, employees0_.title as title6_1_1_ from EMPLOYEE employees0_ where employees0_.DEPT_ID=? order by employees0_.FIRST_NAME desc
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f9678e1]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c4ed84]
Visiting attribute path : department
Visiting attribute path : employees
Property path deemed to be circular : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Property path deemed to be circular : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=fr.formation.inti.entities.Employee.employees)
    - Returns
       - CollectionReturnImpl(collection=fr.formation.inti.entities.Employee.employees, querySpaceUid=<gen:0>, path=[fr.formation.inti.entities.Employee.employees])
          - (collection element) CollectionFetchableElementEntityGraph(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:1>, path=[fr.formation.inti.entities.Employee.employees].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=fr.formation.inti.entities.Employee.employees)
          - SQL table alias mapping - employees0_
          - alias suffix - 0_
          - suffixed key columns - {SUPERIOR8_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - EMP_ID1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=fr.formation.inti.entities.Employee)
                - SQL table alias mapping - employees0_
                - alias suffix - 1_
                - suffixed key columns - {EMP_ID1_1_1_}

Static select for collection fr.formation.inti.entities.Employee.employees: select employees0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employees0_.EMP_ID as EMP_ID1_1_0_, employees0_.EMP_ID as EMP_ID1_1_1_, employees0_.DEPT_ID as DEPT_ID7_1_1_, employees0_.END_DATE as END_DATE2_1_1_, employees0_.FIRST_NAME as FIRST_NA3_1_1_, employees0_.LAST_NAME as LAST_NAM4_1_1_, employees0_.SUPERIOR_EMP_ID as SUPERIOR8_1_1_, employees0_.START_DATE as START_DA5_1_1_, employees0_.title as title6_1_1_ from EMPLOYEE employees0_ where employees0_.SUPERIOR_EMP_ID=?
Registering SessionFactory: 449ce5f3-32b5-4a3d-9afc-661dd442f56a (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: fr.formation.inti.entities.Department
Resolving reference to class: fr.formation.inti.entities.Employee
HHH000261: Table found: bd.department
HHH000037: Columns: [name, dept_id]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: bd.employee
HHH000037: Columns: [end_date, last_name, assigned_branch_id, title, dept_id, first_name, superior_emp_id, emp_id, start_date]
HHH000108: Foreign keys: [employee_employee_fk, employee_department_fk, employee_branch_fk]
HHH000126: Indexes: [employee_employee_fk, employee_department_fk, employee_branch_fk, primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
from Employee
parse() - HQL: from fr.formation.inti.entities.Employee
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'fr'
                |  |  |  \-[IDENT] Node: 'formation'
                |  |  \-[IDENT] Node: 'inti'
                |  \-[IDENT] Node: 'entities'
                \-[IDENT] Node: 'Employee'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : fr.formation.inti.entities.Employee (<no alias>) -> employee0_
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( FromClause{level=1} EMPLOYEE employee0_ ) )
Derived SELECT clause created.
Using FROM fragment [EMPLOYEE employee0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EMPLOYEE)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'employee0_.EMP_ID as EMP_ID1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=EMPLOYEE,tableAlias=employee0_,origin=null,columns={,className=fr.formation.inti.entities.Employee}}}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.DEPT_ID as DEPT_ID7_1_, employee0_.END_DATE as END_DATE2_1_, employee0_.FIRST_NAME as FIRST_NA3_1_, employee0_.LAST_NAME as LAST_NAM4_1_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_, employee0_.START_DATE as START_DA5_1_, employee0_.title as title6_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'EMPLOYEE employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=EMPLOYEE,tableAlias=employee0_,origin=null,columns={,className=fr.formation.inti.entities.Employee}}

throwQueryException() : no errors
HQL: from fr.formation.inti.entities.Employee
SQL: select employee0_.EMP_ID as EMP_ID1_1_, employee0_.DEPT_ID as DEPT_ID7_1_, employee0_.END_DATE as END_DATE2_1_, employee0_.FIRST_NAME as FIRST_NA3_1_, employee0_.LAST_NAME as LAST_NAM4_1_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_, employee0_.START_DATE as START_DA5_1_, employee0_.title as title6_1_ from EMPLOYEE employee0_
throwQueryException() : no errors
select employee0_.EMP_ID as EMP_ID1_1_, employee0_.DEPT_ID as DEPT_ID7_1_, employee0_.END_DATE as END_DATE2_1_, employee0_.FIRST_NAME as FIRST_NA3_1_, employee0_.LAST_NAME as LAST_NAM4_1_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_, employee0_.START_DATE as START_DA5_1_, employee0_.title as title6_1_ from EMPLOYEE employee0_
Obtaining JDBC connection
Obtained JDBC connection
Result set row: 0
Result row: EntityKey[fr.formation.inti.entities.Employee#1]
Result set row: 1
Result row: EntityKey[fr.formation.inti.entities.Employee#2]
Result set row: 2
Result row: EntityKey[fr.formation.inti.entities.Employee#3]
Result set row: 3
Result row: EntityKey[fr.formation.inti.entities.Employee#4]
Result set row: 4
Result row: EntityKey[fr.formation.inti.entities.Employee#5]
Result set row: 5
Result row: EntityKey[fr.formation.inti.entities.Employee#6]
Result set row: 6
Result row: EntityKey[fr.formation.inti.entities.Employee#7]
Result set row: 7
Result row: EntityKey[fr.formation.inti.entities.Employee#8]
Result set row: 8
Result row: EntityKey[fr.formation.inti.entities.Employee#9]
Result set row: 9
Result row: EntityKey[fr.formation.inti.entities.Employee#10]
Result set row: 10
Result row: EntityKey[fr.formation.inti.entities.Employee#11]
Result set row: 11
Result row: EntityKey[fr.formation.inti.entities.Employee#12]
Result set row: 12
Result row: EntityKey[fr.formation.inti.entities.Employee#13]
Result set row: 13
Result row: EntityKey[fr.formation.inti.entities.Employee#14]
Result set row: 14
Result row: EntityKey[fr.formation.inti.entities.Employee#15]
Result set row: 15
Result row: EntityKey[fr.formation.inti.entities.Employee#16]
Resolving associations for [fr.formation.inti.entities.Employee#1]
Done materializing entity [fr.formation.inti.entities.Employee#1]
Resolving associations for [fr.formation.inti.entities.Employee#2]
Done materializing entity [fr.formation.inti.entities.Employee#2]
Resolving associations for [fr.formation.inti.entities.Employee#3]
Done materializing entity [fr.formation.inti.entities.Employee#3]
Resolving associations for [fr.formation.inti.entities.Employee#4]
Done materializing entity [fr.formation.inti.entities.Employee#4]
Resolving associations for [fr.formation.inti.entities.Employee#5]
Done materializing entity [fr.formation.inti.entities.Employee#5]
Resolving associations for [fr.formation.inti.entities.Employee#6]
Done materializing entity [fr.formation.inti.entities.Employee#6]
Resolving associations for [fr.formation.inti.entities.Employee#7]
Done materializing entity [fr.formation.inti.entities.Employee#7]
Resolving associations for [fr.formation.inti.entities.Employee#8]
Done materializing entity [fr.formation.inti.entities.Employee#8]
Resolving associations for [fr.formation.inti.entities.Employee#9]
Done materializing entity [fr.formation.inti.entities.Employee#9]
Resolving associations for [fr.formation.inti.entities.Employee#10]
Done materializing entity [fr.formation.inti.entities.Employee#10]
Resolving associations for [fr.formation.inti.entities.Employee#11]
Done materializing entity [fr.formation.inti.entities.Employee#11]
Resolving associations for [fr.formation.inti.entities.Employee#12]
Done materializing entity [fr.formation.inti.entities.Employee#12]
Resolving associations for [fr.formation.inti.entities.Employee#13]
Done materializing entity [fr.formation.inti.entities.Employee#13]
Resolving associations for [fr.formation.inti.entities.Employee#14]
Done materializing entity [fr.formation.inti.entities.Employee#14]
Resolving associations for [fr.formation.inti.entities.Employee#15]
Done materializing entity [fr.formation.inti.entities.Employee#15]
Resolving associations for [fr.formation.inti.entities.Employee#16]
Done materializing entity [fr.formation.inti.entities.Employee#16]
Releasing JDBC connection
Released JDBC connection
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Connection pool now considered primed; min-size will be maintained
Connection pool now considered primed; min-size will be maintained
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding type registration boolean -> org.hibernate.type.BooleanType@1ee0005
Adding type registration boolean -> org.hibernate.type.BooleanType@1ee0005
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ee0005
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@626b2d4a
Adding type registration true_false -> org.hibernate.type.TrueFalseType@123a439b
Adding type registration yes_no -> org.hibernate.type.YesNoType@36aa7bc2
Adding type registration byte -> org.hibernate.type.ByteType@4926097b
Adding type registration byte -> org.hibernate.type.ByteType@4926097b
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4926097b
Adding type registration character -> org.hibernate.type.CharacterType@71dac704
Adding type registration char -> org.hibernate.type.CharacterType@71dac704
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@71dac704
Adding type registration short -> org.hibernate.type.ShortType@606d8acf
Adding type registration short -> org.hibernate.type.ShortType@606d8acf
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@606d8acf
Adding type registration integer -> org.hibernate.type.IntegerType@5fdef03a
Adding type registration int -> org.hibernate.type.IntegerType@5fdef03a
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5fdef03a
Adding type registration long -> org.hibernate.type.LongType@4aa8f0b4
Adding type registration long -> org.hibernate.type.LongType@4aa8f0b4
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4aa8f0b4
Adding type registration float -> org.hibernate.type.FloatType@16f65612
Adding type registration float -> org.hibernate.type.FloatType@16f65612
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@16f65612
Adding type registration double -> org.hibernate.type.DoubleType@21588809
Adding type registration double -> org.hibernate.type.DoubleType@21588809
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@21588809
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2437c6dc
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2437c6dc
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@383534aa
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@383534aa
Adding type registration string -> org.hibernate.type.StringType@1055e4af
Adding type registration java.lang.String -> org.hibernate.type.StringType@1055e4af
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1c6b6478
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@43556938
Adding type registration url -> org.hibernate.type.UrlType@3abfe836
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3abfe836
Adding type registration date -> org.hibernate.type.DateType@68f7aae2
Adding type registration java.sql.Date -> org.hibernate.type.DateType@68f7aae2
Adding type registration time -> org.hibernate.type.TimeType@7cef4e59
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7cef4e59
Adding type registration timestamp -> org.hibernate.type.TimestampType@555590
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@555590
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@555590
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3c679bde
Adding type registration calendar -> org.hibernate.type.CalendarType@12f40c25
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@12f40c25
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@12f40c25
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3419866c
Adding type registration locale -> org.hibernate.type.LocaleType@6842775d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6842775d
Adding type registration currency -> org.hibernate.type.CurrencyType@3f102e87
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3f102e87
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2280cdac
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2280cdac
Adding type registration class -> org.hibernate.type.ClassType@4ca8195f
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4ca8195f
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@66133adc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@66133adc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@24273305
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@33e5ccce
Adding type registration binary -> org.hibernate.type.BinaryType@6956de9
Adding type registration byte[] -> org.hibernate.type.BinaryType@6956de9
Adding type registration [B -> org.hibernate.type.BinaryType@6956de9
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@de0a01f
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@de0a01f
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@de0a01f
Adding type registration image -> org.hibernate.type.ImageType@5d3411d
Adding type registration characters -> org.hibernate.type.CharArrayType@2be94b0f
Adding type registration char[] -> org.hibernate.type.CharArrayType@2be94b0f
Adding type registration [C -> org.hibernate.type.CharArrayType@2be94b0f
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@47d384ee
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@47d384ee
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@47d384ee
Adding type registration text -> org.hibernate.type.TextType@1bc6a36e
Adding type registration ntext -> org.hibernate.type.NTextType@71e7a66b
Adding type registration blob -> org.hibernate.type.BlobType@233c0b17
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@233c0b17
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@33a10788
Adding type registration clob -> org.hibernate.type.ClobType@35851384
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@35851384
Adding type registration nclob -> org.hibernate.type.NClobType@45c8e616
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@45c8e616
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7cf10a6f
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5ba23b66
Adding type registration serializable -> org.hibernate.type.SerializableType@7d417077
Adding type registration object -> org.hibernate.type.ObjectType@6bdf28bb
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bdf28bb
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e580929
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1cd072a9
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7c75222b
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4c203ea1
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@27f674d
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1d251891
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@48140564
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@58ceff1
HCANN000001: Hibernate Commons Annotations {4.0.4.Final}
HHH000412: Hibernate Core {4.3.4.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH000043: Configuring from resource: /hibernate.cfg.xml
HHH000040: Configuration resource: /hibernate.cfg.xml
Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
connection.driver_class=com.mysql.jdbc.Driver
connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC
connection.username=root
connection.password=123456
hibernate.enable_lazy_load_no_trans=true
connection.pool_size=5
dialect=org.hibernate.dialect.MySQLDialect
hibernate.current_session_context_class=thread
show_sql=true
hibernate.hbm2ddl.auto=update
Session-factory config [null] named class [fr.formation.inti.entities.Employee] for mapping
Session-factory config [null] named class [fr.formation.inti.entities.Department] for mapping
HHH000041: Configured SessionFactory: null
Properties: {java.vendor=Oracle Corporation, show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_231\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_231\jre\classes, hibernate.current_session_context_class=thread, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_231-b11, user.name=IN-DF-019, connection.driver_class=com.mysql.jdbc.Driver, user.language=fr, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_231\jre\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.8.0_231, user.timezone=Europe/Paris, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_231\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=FR, connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, java.home=C:\Program Files\Java\jdk1.8.0_231\jre, java.vm.info=mixed mode, os.version=10.0, path.separator=;, connection.password=123456, java.vm.version=25.231-b11, hibernate.connection.password=123456, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, user.script=, user.home=C:\Users\IN-DF-019, hibernate.enable_lazy_load_no_trans=true, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_231\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jdk-13.0.1/bin/server;C:/Program Files/Java/jdk-13.0.1/bin;C:\Program Files\Java\jdk1.8.0_231\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Users\IN-DF-019\AppData\Local\Microsoft\WindowsApps;;C:\Users\IN-DF-019\AppData\Local\Programs\Microsoft VS Code\bin;C:\Windows\System32;;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=fr.formation.inti.controllers.AppService, java.class.path=C:\Users\IN-DF-019\Desktop\core\target\classes;C:\Users\IN-DF-019\.m2\repository\org\hibernate\hibernate-core\4.3.4.Final\hibernate-core-4.3.4.Final.jar;C:\Users\IN-DF-019\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\IN-DF-019\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\IN-DF-019\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\IN-DF-019\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\IN-DF-019\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\IN-DF-019\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;C:\Users\IN-DF-019\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\IN-DF-019\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\IN-DF-019\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\IN-DF-019\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\IN-DF-019\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\IN-DF-019\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\IN-DF-019\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, sun.os.patch.level=, connection.pool_size=5, java.io.tmpdir=C:\Users\IN-DF-~1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_231\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\IN-DF-019\Desktop\core, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true, hibernate.connection.pool_size=5}
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Preparing to build session factory with filters : {}
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/bd?serverTimezone=UTC]
HHH000046: Connection properties: {user=root, password=123456}
HHH000006: Autocommit mode: false
HHH000115: Hibernate connection pool size: 5 (min=1)
Initializing Connection pool with 1 Connections
Database ->
       name : MySQL
    version : 5.6.45-log
      major : 5
      minor : 6
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: fr.formation.inti.entities.Employee
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name Employee
Bind entity fr.formation.inti.entities.Employee on table EMPLOYEE
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=EMP_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property empId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:empId]
building SimpleValue for empId
Building property empId
Binding column: Ejb3JoinColumn{logicalColumnName='DEPT_ID', referencedColumn='DEPT_ID', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=department, insertable=true, updatable=true, unique=false}
Building property department
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='manager'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=employees, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=employees_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='employees_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='manager'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='manager'}
Collection role: fr.formation.inti.entities.Employee.employees
Building property employees
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=END_DATE, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property endDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:endDate]
building SimpleValue for endDate
Building property endDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=FIRST_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property firstName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:firstName]
building SimpleValue for firstName
Building property firstName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=LAST_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:lastName]
building SimpleValue for lastName
Building property lastName
Binding column: Ejb3JoinColumn{logicalColumnName='SUPERIOR_EMP_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=manager, insertable=true, updatable=true, unique=false}
Building property manager
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=START_DATE, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property startDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:startDate]
building SimpleValue for startDate
Building property startDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:title]
building SimpleValue for title
Building property title
Binding entity from annotated class: fr.formation.inti.entities.Department
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name Department
Bind entity fr.formation.inti.entities.Department on table DEPARTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=DEPT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property deptId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Department:deptId]
building SimpleValue for deptId
Building property deptId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=employees, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=employees_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='employees_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
Collection role: fr.formation.inti.entities.Department.employees
Building property employees
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Department:name]
building SimpleValue for name
Building property name
Starting fillSimpleValue for empId
Starting fillSimpleValue for endDate
Starting fillSimpleValue for firstName
Starting fillSimpleValue for lastName
Starting fillSimpleValue for startDate
Starting fillSimpleValue for title
Starting fillSimpleValue for deptId
Starting fillSimpleValue for name
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: fr.formation.inti.entities.Employee.employees
Binding a OneToMany: fr.formation.inti.entities.Employee.employees through a foreign key
Mapping collection: fr.formation.inti.entities.Employee.employees -> EMPLOYEE
Retrieving property fr.formation.inti.entities.Employee.manager
Mapped collection key: SUPERIOR_EMP_ID, one-to-many: fr.formation.inti.entities.Employee
Second pass for collection: fr.formation.inti.entities.Department.employees
Binding a OneToMany: fr.formation.inti.entities.Department.employees through a foreign key
Mapping collection: fr.formation.inti.entities.Department.employees -> EMPLOYEE
Retrieving property fr.formation.inti.entities.Employee.department
Mapped collection key: DEPT_ID, one-to-many: fr.formation.inti.entities.Employee
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: fr.formation.inti.entities.Department
Resolving reference to class: fr.formation.inti.entities.Employee
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000399: Using default transaction strategy (direct JDBC transactions)
Using BatchFetchStyle : LEGACY
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Default null ordering: none
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: disabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : enabled
JTA Track by Thread: enabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_231\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_231\jre\classes, hibernate.current_session_context_class=thread, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_231-b11, user.name=IN-DF-019, connection.driver_class=com.mysql.jdbc.Driver, user.language=fr, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_231\jre\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.8.0_231, user.timezone=Europe/Paris, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_231\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=FR, connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, java.home=C:\Program Files\Java\jdk1.8.0_231\jre, java.vm.info=mixed mode, os.version=10.0, path.separator=;, connection.password=123456, java.vm.version=25.231-b11, hibernate.connection.password=123456, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, user.script=, user.home=C:\Users\IN-DF-019, hibernate.enable_lazy_load_no_trans=true, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_231\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jdk-13.0.1/bin/server;C:/Program Files/Java/jdk-13.0.1/bin;C:\Program Files\Java\jdk1.8.0_231\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Users\IN-DF-019\AppData\Local\Microsoft\WindowsApps;;C:\Users\IN-DF-019\AppData\Local\Programs\Microsoft VS Code\bin;C:\Windows\System32;;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=fr.formation.inti.controllers.AppService, java.class.path=C:\Users\IN-DF-019\Desktop\core\target\classes;C:\Users\IN-DF-019\.m2\repository\org\hibernate\hibernate-core\4.3.4.Final\hibernate-core-4.3.4.Final.jar;C:\Users\IN-DF-019\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\IN-DF-019\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\IN-DF-019\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\IN-DF-019\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\IN-DF-019\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\IN-DF-019\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;C:\Users\IN-DF-019\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\IN-DF-019\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\IN-DF-019\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\IN-DF-019\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\IN-DF-019\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\IN-DF-019\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\IN-DF-019\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, sun.os.patch.level=, connection.pool_size=5, java.io.tmpdir=C:\Users\IN-DF-~1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_231\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\IN-DF-019\Desktop\core, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.pool_size=5, hibernate.show_sql=true}
Skipping JACC integration as it was not enabled
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for collection: fr.formation.inti.entities.Department.employees
 Row insert: update EMPLOYEE set DEPT_ID=? where EMP_ID=?
 Row update: update EMPLOYEE set  where EMP_ID=?
 Row delete: update EMPLOYEE set DEPT_ID=null where DEPT_ID=? and EMP_ID=?
 One-shot delete: update EMPLOYEE set DEPT_ID=null where DEPT_ID=?
Static SQL for collection: fr.formation.inti.entities.Employee.employees
 Row insert: update EMPLOYEE set SUPERIOR_EMP_ID=? where EMP_ID=?
 Row update: update EMPLOYEE set  where EMP_ID=?
 Row delete: update EMPLOYEE set SUPERIOR_EMP_ID=null where SUPERIOR_EMP_ID=? and EMP_ID=?
 One-shot delete: update EMPLOYEE set SUPERIOR_EMP_ID=null where SUPERIOR_EMP_ID=?
Static SQL for entity: fr.formation.inti.entities.Employee
 Version select: select EMP_ID from EMPLOYEE where EMP_ID =?
 Snapshot select: select employee_.EMP_ID, employee_.DEPT_ID as DEPT_ID7_1_, employee_.END_DATE as END_DATE2_1_, employee_.FIRST_NAME as FIRST_NA3_1_, employee_.LAST_NAME as LAST_NAM4_1_, employee_.SUPERIOR_EMP_ID as SUPERIOR8_1_, employee_.START_DATE as START_DA5_1_, employee_.title as title6_1_ from EMPLOYEE employee_ where employee_.EMP_ID=?
 Insert 0: insert into EMPLOYEE (DEPT_ID, END_DATE, FIRST_NAME, LAST_NAME, SUPERIOR_EMP_ID, START_DATE, title, EMP_ID) values (?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update EMPLOYEE set DEPT_ID=?, END_DATE=?, FIRST_NAME=?, LAST_NAME=?, SUPERIOR_EMP_ID=?, START_DATE=?, title=? where EMP_ID=?
 Delete 0: delete from EMPLOYEE where EMP_ID=?
 Identity insert: insert into EMPLOYEE (DEPT_ID, END_DATE, FIRST_NAME, LAST_NAME, SUPERIOR_EMP_ID, START_DATE, title) values (?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62656be4]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [NONE]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aa8e115]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [READ]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51a9ad5e]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [UPGRADE]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72ade7e3]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [UPGRADE_NOWAIT]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fce8fd9]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [UPGRADE_SKIPLOCKED]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d94beb9]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [FORCE]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1df8b5b8]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [PESSIMISTIC_READ]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b993c65]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [PESSIMISTIC_WRITE]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f1c29b7]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [PESSIMISTIC_FORCE_INCREMENT]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f284218]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [OPTIMISTIC]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ea5b703]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [OPTIMISTIC_FORCE_INCREMENT]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Static select for action ACTION_MERGE on entity fr.formation.inti.entities.Employee: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Static select for action ACTION_REFRESH on entity fr.formation.inti.entities.Employee: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Static SQL for entity: fr.formation.inti.entities.Department
 Version select: select DEPT_ID from DEPARTMENT where DEPT_ID =?
 Snapshot select: select department_.DEPT_ID, department_.NAME as NAME2_0_ from DEPARTMENT department_ where department_.DEPT_ID=?
 Insert 0: insert into DEPARTMENT (NAME, DEPT_ID) values (?, ?)
 Update 0: update DEPARTMENT set NAME=? where DEPT_ID=?
 Delete 0: delete from DEPARTMENT where DEPT_ID=?
 Identity insert: insert into DEPARTMENT (NAME) values (?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@420a85c4]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [NONE]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62833051]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [READ]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a37aefe]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [UPGRADE]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@266374ef]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [UPGRADE_NOWAIT]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24c4ddae]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [UPGRADE_SKIPLOCKED]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b7fdc8]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [FORCE]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a57ae10]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [PESSIMISTIC_READ]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e07b95f]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [PESSIMISTIC_WRITE]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fc4780b]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [PESSIMISTIC_FORCE_INCREMENT]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48c76607]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [OPTIMISTIC]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f81aa00]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [OPTIMISTIC_FORCE_INCREMENT]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Static select for action ACTION_MERGE on entity fr.formation.inti.entities.Department: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Static select for action ACTION_REFRESH on entity fr.formation.inti.entities.Department: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@389c4eb1]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@127a7a2e]
Visiting attribute path : department
Property path deemed to be circular : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=fr.formation.inti.entities.Department.employees)
    - Returns
       - CollectionReturnImpl(collection=fr.formation.inti.entities.Department.employees, querySpaceUid=<gen:0>, path=[fr.formation.inti.entities.Department.employees])
          - (collection element) CollectionFetchableElementEntityGraph(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:1>, path=[fr.formation.inti.entities.Department.employees].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=fr.formation.inti.entities.Department.employees)
          - SQL table alias mapping - employees0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID7_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - EMP_ID1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=fr.formation.inti.entities.Employee)
                - SQL table alias mapping - employees0_
                - alias suffix - 1_
                - suffixed key columns - {EMP_ID1_1_1_}

Static select for collection fr.formation.inti.entities.Department.employees: select employees0_.DEPT_ID as DEPT_ID7_0_0_, employees0_.EMP_ID as EMP_ID1_1_0_, employees0_.EMP_ID as EMP_ID1_1_1_, employees0_.DEPT_ID as DEPT_ID7_1_1_, employees0_.END_DATE as END_DATE2_1_1_, employees0_.FIRST_NAME as FIRST_NA3_1_1_, employees0_.LAST_NAME as LAST_NAM4_1_1_, employees0_.SUPERIOR_EMP_ID as SUPERIOR8_1_1_, employees0_.START_DATE as START_DA5_1_1_, employees0_.title as title6_1_1_ from EMPLOYEE employees0_ where employees0_.DEPT_ID=? order by employees0_.FIRST_NAME desc
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2049a9c1]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ef6d34c]
Visiting attribute path : department
Visiting attribute path : employees
Property path deemed to be circular : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Property path deemed to be circular : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=fr.formation.inti.entities.Employee.employees)
    - Returns
       - CollectionReturnImpl(collection=fr.formation.inti.entities.Employee.employees, querySpaceUid=<gen:0>, path=[fr.formation.inti.entities.Employee.employees])
          - (collection element) CollectionFetchableElementEntityGraph(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:1>, path=[fr.formation.inti.entities.Employee.employees].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=fr.formation.inti.entities.Employee.employees)
          - SQL table alias mapping - employees0_
          - alias suffix - 0_
          - suffixed key columns - {SUPERIOR8_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - EMP_ID1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=fr.formation.inti.entities.Employee)
                - SQL table alias mapping - employees0_
                - alias suffix - 1_
                - suffixed key columns - {EMP_ID1_1_1_}

Static select for collection fr.formation.inti.entities.Employee.employees: select employees0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employees0_.EMP_ID as EMP_ID1_1_0_, employees0_.EMP_ID as EMP_ID1_1_1_, employees0_.DEPT_ID as DEPT_ID7_1_1_, employees0_.END_DATE as END_DATE2_1_1_, employees0_.FIRST_NAME as FIRST_NA3_1_1_, employees0_.LAST_NAME as LAST_NAM4_1_1_, employees0_.SUPERIOR_EMP_ID as SUPERIOR8_1_1_, employees0_.START_DATE as START_DA5_1_1_, employees0_.title as title6_1_1_ from EMPLOYEE employees0_ where employees0_.SUPERIOR_EMP_ID=?
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7d3d101b
Registering SessionFactory: bc19ed2f-95d8-4e12-818d-1da619f0e14f (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: fr.formation.inti.entities.Department
Resolving reference to class: fr.formation.inti.entities.Employee
HHH000261: Table found: bd.department
HHH000037: Columns: [name, dept_id]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: bd.employee
HHH000037: Columns: [end_date, last_name, assigned_branch_id, title, dept_id, first_name, superior_emp_id, emp_id, start_date]
HHH000108: Foreign keys: [employee_employee_fk, employee_department_fk, employee_branch_fk]
HHH000126: Indexes: [employee_employee_fk, employee_department_fk, employee_branch_fk, primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Adding type registration boolean -> org.hibernate.type.BooleanType@1ee0005
Adding type registration boolean -> org.hibernate.type.BooleanType@1ee0005
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ee0005
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@626b2d4a
Adding type registration true_false -> org.hibernate.type.TrueFalseType@123a439b
Adding type registration yes_no -> org.hibernate.type.YesNoType@36aa7bc2
Adding type registration byte -> org.hibernate.type.ByteType@4926097b
Adding type registration byte -> org.hibernate.type.ByteType@4926097b
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4926097b
Adding type registration character -> org.hibernate.type.CharacterType@71dac704
Adding type registration char -> org.hibernate.type.CharacterType@71dac704
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@71dac704
Adding type registration short -> org.hibernate.type.ShortType@606d8acf
Adding type registration short -> org.hibernate.type.ShortType@606d8acf
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@606d8acf
Adding type registration integer -> org.hibernate.type.IntegerType@5fdef03a
Adding type registration int -> org.hibernate.type.IntegerType@5fdef03a
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5fdef03a
Adding type registration long -> org.hibernate.type.LongType@4aa8f0b4
Adding type registration long -> org.hibernate.type.LongType@4aa8f0b4
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4aa8f0b4
Adding type registration float -> org.hibernate.type.FloatType@16f65612
Adding type registration float -> org.hibernate.type.FloatType@16f65612
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@16f65612
Adding type registration double -> org.hibernate.type.DoubleType@21588809
Adding type registration double -> org.hibernate.type.DoubleType@21588809
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@21588809
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2437c6dc
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2437c6dc
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@383534aa
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@383534aa
Adding type registration string -> org.hibernate.type.StringType@1055e4af
Adding type registration java.lang.String -> org.hibernate.type.StringType@1055e4af
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1c6b6478
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@43556938
Adding type registration url -> org.hibernate.type.UrlType@3abfe836
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3abfe836
Adding type registration date -> org.hibernate.type.DateType@68f7aae2
Adding type registration java.sql.Date -> org.hibernate.type.DateType@68f7aae2
Adding type registration time -> org.hibernate.type.TimeType@7cef4e59
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7cef4e59
Adding type registration timestamp -> org.hibernate.type.TimestampType@555590
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@555590
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@555590
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3c679bde
Adding type registration calendar -> org.hibernate.type.CalendarType@12f40c25
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@12f40c25
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@12f40c25
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3419866c
Adding type registration locale -> org.hibernate.type.LocaleType@6842775d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6842775d
Adding type registration currency -> org.hibernate.type.CurrencyType@3f102e87
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3f102e87
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2280cdac
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2280cdac
Adding type registration class -> org.hibernate.type.ClassType@4ca8195f
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4ca8195f
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@66133adc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@66133adc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@24273305
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@33e5ccce
Adding type registration binary -> org.hibernate.type.BinaryType@6956de9
Adding type registration byte[] -> org.hibernate.type.BinaryType@6956de9
Adding type registration [B -> org.hibernate.type.BinaryType@6956de9
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@de0a01f
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@de0a01f
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@de0a01f
Adding type registration image -> org.hibernate.type.ImageType@5d3411d
Adding type registration characters -> org.hibernate.type.CharArrayType@2be94b0f
Adding type registration char[] -> org.hibernate.type.CharArrayType@2be94b0f
Adding type registration [C -> org.hibernate.type.CharArrayType@2be94b0f
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@47d384ee
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@47d384ee
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@47d384ee
Adding type registration text -> org.hibernate.type.TextType@1bc6a36e
Adding type registration ntext -> org.hibernate.type.NTextType@71e7a66b
Adding type registration blob -> org.hibernate.type.BlobType@233c0b17
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@233c0b17
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@33a10788
Adding type registration clob -> org.hibernate.type.ClobType@35851384
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@35851384
Adding type registration nclob -> org.hibernate.type.NClobType@45c8e616
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@45c8e616
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7cf10a6f
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5ba23b66
Adding type registration serializable -> org.hibernate.type.SerializableType@7d417077
Adding type registration object -> org.hibernate.type.ObjectType@6bdf28bb
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bdf28bb
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@573906eb
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@479ceda0
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6d07a63d
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@571c5681
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@488d1cd7
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@68dc098b
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@38ba6ce3
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@d278d2b
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH000043: Configuring from resource: /hibernate.cfg.xml
HHH000040: Configuration resource: /hibernate.cfg.xml
Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
connection.driver_class=com.mysql.jdbc.Driver
connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC
connection.username=root
connection.password=123456
hibernate.enable_lazy_load_no_trans=true
connection.pool_size=5
dialect=org.hibernate.dialect.MySQLDialect
hibernate.current_session_context_class=thread
show_sql=true
hibernate.hbm2ddl.auto=update
Session-factory config [null] named class [fr.formation.inti.entities.Employee] for mapping
Session-factory config [null] named class [fr.formation.inti.entities.Department] for mapping
HHH000041: Configured SessionFactory: null
Properties: {java.vendor=Oracle Corporation, show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_231\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_231\jre\classes, hibernate.current_session_context_class=thread, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_231-b11, user.name=IN-DF-019, connection.driver_class=com.mysql.jdbc.Driver, user.language=fr, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_231\jre\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.8.0_231, user.timezone=Europe/Paris, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_231\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=FR, connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, java.home=C:\Program Files\Java\jdk1.8.0_231\jre, java.vm.info=mixed mode, os.version=10.0, path.separator=;, connection.password=123456, java.vm.version=25.231-b11, hibernate.connection.password=123456, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, user.script=, user.home=C:\Users\IN-DF-019, hibernate.enable_lazy_load_no_trans=true, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_231\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jdk-13.0.1/bin/server;C:/Program Files/Java/jdk-13.0.1/bin;C:\Program Files\Java\jdk1.8.0_231\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Users\IN-DF-019\AppData\Local\Microsoft\WindowsApps;;C:\Users\IN-DF-019\AppData\Local\Programs\Microsoft VS Code\bin;C:\Windows\System32;;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=fr.formation.inti.controllers.AppService, java.class.path=C:\Users\IN-DF-019\Desktop\core\target\classes;C:\Users\IN-DF-019\.m2\repository\org\hibernate\hibernate-core\4.3.4.Final\hibernate-core-4.3.4.Final.jar;C:\Users\IN-DF-019\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\IN-DF-019\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\IN-DF-019\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\IN-DF-019\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\IN-DF-019\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\IN-DF-019\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;C:\Users\IN-DF-019\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\IN-DF-019\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\IN-DF-019\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\IN-DF-019\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\IN-DF-019\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\IN-DF-019\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\IN-DF-019\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, sun.os.patch.level=, connection.pool_size=5, java.io.tmpdir=C:\Users\IN-DF-~1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_231\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\IN-DF-019\Desktop\core, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true, hibernate.connection.pool_size=5}
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Preparing to build session factory with filters : {}
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/bd?serverTimezone=UTC]
HHH000046: Connection properties: {user=root, password=123456}
HHH000006: Autocommit mode: false
HHH000115: Hibernate connection pool size: 5 (min=1)
Initializing Connection pool with 1 Connections
Database ->
       name : MySQL
    version : 5.6.45-log
      major : 5
      minor : 6
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: fr.formation.inti.entities.Employee
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name Employee
Bind entity fr.formation.inti.entities.Employee on table EMPLOYEE
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=EMP_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property empId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:empId]
building SimpleValue for empId
Building property empId
Binding column: Ejb3JoinColumn{logicalColumnName='DEPT_ID', referencedColumn='DEPT_ID', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=department, insertable=true, updatable=true, unique=false}
Building property department
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='manager'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=employees, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=employees_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='employees_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='manager'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='manager'}
Collection role: fr.formation.inti.entities.Employee.employees
Building property employees
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=END_DATE, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property endDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:endDate]
building SimpleValue for endDate
Building property endDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=FIRST_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property firstName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:firstName]
building SimpleValue for firstName
Building property firstName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=LAST_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:lastName]
building SimpleValue for lastName
Building property lastName
Binding column: Ejb3JoinColumn{logicalColumnName='SUPERIOR_EMP_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=manager, insertable=true, updatable=true, unique=false}
Building property manager
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=START_DATE, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property startDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:startDate]
building SimpleValue for startDate
Building property startDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:title]
building SimpleValue for title
Building property title
Binding entity from annotated class: fr.formation.inti.entities.Department
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name Department
Bind entity fr.formation.inti.entities.Department on table DEPARTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=DEPT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property deptId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Department:deptId]
building SimpleValue for deptId
Building property deptId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=employees, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=employees_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='employees_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
Collection role: fr.formation.inti.entities.Department.employees
Building property employees
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Department:name]
building SimpleValue for name
Building property name
Starting fillSimpleValue for empId
Starting fillSimpleValue for endDate
Starting fillSimpleValue for firstName
Starting fillSimpleValue for lastName
Starting fillSimpleValue for startDate
Starting fillSimpleValue for title
Starting fillSimpleValue for deptId
Starting fillSimpleValue for name
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: fr.formation.inti.entities.Employee.employees
Binding a OneToMany: fr.formation.inti.entities.Employee.employees through a foreign key
Mapping collection: fr.formation.inti.entities.Employee.employees -> EMPLOYEE
Retrieving property fr.formation.inti.entities.Employee.manager
Mapped collection key: SUPERIOR_EMP_ID, one-to-many: fr.formation.inti.entities.Employee
Second pass for collection: fr.formation.inti.entities.Department.employees
Binding a OneToMany: fr.formation.inti.entities.Department.employees through a foreign key
Mapping collection: fr.formation.inti.entities.Department.employees -> EMPLOYEE
Retrieving property fr.formation.inti.entities.Employee.department
Mapped collection key: DEPT_ID, one-to-many: fr.formation.inti.entities.Employee
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: fr.formation.inti.entities.Department
Resolving reference to class: fr.formation.inti.entities.Employee
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000399: Using default transaction strategy (direct JDBC transactions)
Using BatchFetchStyle : LEGACY
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Default null ordering: none
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: disabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : enabled
JTA Track by Thread: enabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_231\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_231\jre\classes, hibernate.current_session_context_class=thread, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_231-b11, user.name=IN-DF-019, connection.driver_class=com.mysql.jdbc.Driver, user.language=fr, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_231\jre\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.8.0_231, user.timezone=Europe/Paris, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_231\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=FR, connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, java.home=C:\Program Files\Java\jdk1.8.0_231\jre, java.vm.info=mixed mode, os.version=10.0, path.separator=;, connection.password=123456, java.vm.version=25.231-b11, hibernate.connection.password=123456, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, user.script=, user.home=C:\Users\IN-DF-019, hibernate.enable_lazy_load_no_trans=true, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_231\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jdk-13.0.1/bin/server;C:/Program Files/Java/jdk-13.0.1/bin;C:\Program Files\Java\jdk1.8.0_231\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Users\IN-DF-019\AppData\Local\Microsoft\WindowsApps;;C:\Users\IN-DF-019\AppData\Local\Programs\Microsoft VS Code\bin;C:\Windows\System32;;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=fr.formation.inti.controllers.AppService, java.class.path=C:\Users\IN-DF-019\Desktop\core\target\classes;C:\Users\IN-DF-019\.m2\repository\org\hibernate\hibernate-core\4.3.4.Final\hibernate-core-4.3.4.Final.jar;C:\Users\IN-DF-019\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\IN-DF-019\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\IN-DF-019\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\IN-DF-019\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\IN-DF-019\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\IN-DF-019\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;C:\Users\IN-DF-019\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\IN-DF-019\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\IN-DF-019\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\IN-DF-019\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\IN-DF-019\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\IN-DF-019\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\IN-DF-019\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, sun.os.patch.level=, connection.pool_size=5, java.io.tmpdir=C:\Users\IN-DF-~1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_231\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\IN-DF-019\Desktop\core, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.pool_size=5, hibernate.show_sql=true}
Skipping JACC integration as it was not enabled
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for collection: fr.formation.inti.entities.Department.employees
 Row insert: update EMPLOYEE set DEPT_ID=? where EMP_ID=?
 Row update: update EMPLOYEE set  where EMP_ID=?
 Row delete: update EMPLOYEE set DEPT_ID=null where DEPT_ID=? and EMP_ID=?
 One-shot delete: update EMPLOYEE set DEPT_ID=null where DEPT_ID=?
Static SQL for collection: fr.formation.inti.entities.Employee.employees
 Row insert: update EMPLOYEE set SUPERIOR_EMP_ID=? where EMP_ID=?
 Row update: update EMPLOYEE set  where EMP_ID=?
 Row delete: update EMPLOYEE set SUPERIOR_EMP_ID=null where SUPERIOR_EMP_ID=? and EMP_ID=?
 One-shot delete: update EMPLOYEE set SUPERIOR_EMP_ID=null where SUPERIOR_EMP_ID=?
Static SQL for entity: fr.formation.inti.entities.Employee
 Version select: select EMP_ID from EMPLOYEE where EMP_ID =?
 Snapshot select: select employee_.EMP_ID, employee_.DEPT_ID as DEPT_ID7_1_, employee_.END_DATE as END_DATE2_1_, employee_.FIRST_NAME as FIRST_NA3_1_, employee_.LAST_NAME as LAST_NAM4_1_, employee_.SUPERIOR_EMP_ID as SUPERIOR8_1_, employee_.START_DATE as START_DA5_1_, employee_.title as title6_1_ from EMPLOYEE employee_ where employee_.EMP_ID=?
 Insert 0: insert into EMPLOYEE (DEPT_ID, END_DATE, FIRST_NAME, LAST_NAME, SUPERIOR_EMP_ID, START_DATE, title, EMP_ID) values (?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update EMPLOYEE set DEPT_ID=?, END_DATE=?, FIRST_NAME=?, LAST_NAME=?, SUPERIOR_EMP_ID=?, START_DATE=?, title=? where EMP_ID=?
 Delete 0: delete from EMPLOYEE where EMP_ID=?
 Identity insert: insert into EMPLOYEE (DEPT_ID, END_DATE, FIRST_NAME, LAST_NAME, SUPERIOR_EMP_ID, START_DATE, title) values (?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e44b638]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [NONE]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@babafc2]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [READ]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ae3540e]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [UPGRADE]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3688eb5b]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [UPGRADE_NOWAIT]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7922d892]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [UPGRADE_SKIPLOCKED]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@345f69f3]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [FORCE]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f57bcad]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [PESSIMISTIC_READ]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51549490]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [PESSIMISTIC_WRITE]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73d983ea]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [PESSIMISTIC_FORCE_INCREMENT]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@432038ec]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [OPTIMISTIC]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42530531]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [OPTIMISTIC_FORCE_INCREMENT]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Static select for action ACTION_MERGE on entity fr.formation.inti.entities.Employee: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Static select for action ACTION_REFRESH on entity fr.formation.inti.entities.Employee: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Static SQL for entity: fr.formation.inti.entities.Department
 Version select: select DEPT_ID from DEPARTMENT where DEPT_ID =?
 Snapshot select: select department_.DEPT_ID, department_.NAME as NAME2_0_ from DEPARTMENT department_ where department_.DEPT_ID=?
 Insert 0: insert into DEPARTMENT (NAME, DEPT_ID) values (?, ?)
 Update 0: update DEPARTMENT set NAME=? where DEPT_ID=?
 Delete 0: delete from DEPARTMENT where DEPT_ID=?
 Identity insert: insert into DEPARTMENT (NAME) values (?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@181e731e]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [NONE]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f44a157]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [READ]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@291f18]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [UPGRADE]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ddcc487]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [UPGRADE_NOWAIT]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ef5c734]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [UPGRADE_SKIPLOCKED]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36b4091c]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [FORCE]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36cda2c2]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [PESSIMISTIC_READ]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1583741e]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [PESSIMISTIC_WRITE]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36060e]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [PESSIMISTIC_FORCE_INCREMENT]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46b61c56]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [OPTIMISTIC]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1efe439d]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [OPTIMISTIC_FORCE_INCREMENT]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Static select for action ACTION_MERGE on entity fr.formation.inti.entities.Department: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Static select for action ACTION_REFRESH on entity fr.formation.inti.entities.Department: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d446ed1]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12d2ce03]
Visiting attribute path : department
Property path deemed to be circular : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=fr.formation.inti.entities.Department.employees)
    - Returns
       - CollectionReturnImpl(collection=fr.formation.inti.entities.Department.employees, querySpaceUid=<gen:0>, path=[fr.formation.inti.entities.Department.employees])
          - (collection element) CollectionFetchableElementEntityGraph(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:1>, path=[fr.formation.inti.entities.Department.employees].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=fr.formation.inti.entities.Department.employees)
          - SQL table alias mapping - employees0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID7_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - EMP_ID1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=fr.formation.inti.entities.Employee)
                - SQL table alias mapping - employees0_
                - alias suffix - 1_
                - suffixed key columns - {EMP_ID1_1_1_}

Static select for collection fr.formation.inti.entities.Department.employees: select employees0_.DEPT_ID as DEPT_ID7_0_0_, employees0_.EMP_ID as EMP_ID1_1_0_, employees0_.EMP_ID as EMP_ID1_1_1_, employees0_.DEPT_ID as DEPT_ID7_1_1_, employees0_.END_DATE as END_DATE2_1_1_, employees0_.FIRST_NAME as FIRST_NA3_1_1_, employees0_.LAST_NAME as LAST_NAM4_1_1_, employees0_.SUPERIOR_EMP_ID as SUPERIOR8_1_1_, employees0_.START_DATE as START_DA5_1_1_, employees0_.title as title6_1_1_ from EMPLOYEE employees0_ where employees0_.DEPT_ID=? order by employees0_.FIRST_NAME desc
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f53a5dc]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b75c2e3]
Visiting attribute path : department
Visiting attribute path : employees
Property path deemed to be circular : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Property path deemed to be circular : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=fr.formation.inti.entities.Employee.employees)
    - Returns
       - CollectionReturnImpl(collection=fr.formation.inti.entities.Employee.employees, querySpaceUid=<gen:0>, path=[fr.formation.inti.entities.Employee.employees])
          - (collection element) CollectionFetchableElementEntityGraph(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:1>, path=[fr.formation.inti.entities.Employee.employees].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=fr.formation.inti.entities.Employee.employees)
          - SQL table alias mapping - employees0_
          - alias suffix - 0_
          - suffixed key columns - {SUPERIOR8_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - EMP_ID1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=fr.formation.inti.entities.Employee)
                - SQL table alias mapping - employees0_
                - alias suffix - 1_
                - suffixed key columns - {EMP_ID1_1_1_}

Static select for collection fr.formation.inti.entities.Employee.employees: select employees0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employees0_.EMP_ID as EMP_ID1_1_0_, employees0_.EMP_ID as EMP_ID1_1_1_, employees0_.DEPT_ID as DEPT_ID7_1_1_, employees0_.END_DATE as END_DATE2_1_1_, employees0_.FIRST_NAME as FIRST_NA3_1_1_, employees0_.LAST_NAME as LAST_NAM4_1_1_, employees0_.SUPERIOR_EMP_ID as SUPERIOR8_1_1_, employees0_.START_DATE as START_DA5_1_1_, employees0_.title as title6_1_1_ from EMPLOYEE employees0_ where employees0_.SUPERIOR_EMP_ID=?
Registering SessionFactory: 798d9f54-e293-43e5-85cd-535a73505f2d (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: fr.formation.inti.entities.Department
Resolving reference to class: fr.formation.inti.entities.Employee
HHH000261: Table found: bd.department
HHH000037: Columns: [name, dept_id]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: bd.employee
HHH000037: Columns: [end_date, last_name, assigned_branch_id, title, dept_id, first_name, superior_emp_id, emp_id, start_date]
HHH000108: Foreign keys: [employee_employee_fk, employee_department_fk, employee_branch_fk]
HHH000126: Indexes: [employee_employee_fk, employee_department_fk, employee_branch_fk, primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
from Employee
parse() - HQL: from fr.formation.inti.entities.Employee
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'fr'
                |  |  |  \-[IDENT] Node: 'formation'
                |  |  \-[IDENT] Node: 'inti'
                |  \-[IDENT] Node: 'entities'
                \-[IDENT] Node: 'Employee'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : fr.formation.inti.entities.Employee (<no alias>) -> employee0_
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( FromClause{level=1} EMPLOYEE employee0_ ) )
Derived SELECT clause created.
Using FROM fragment [EMPLOYEE employee0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EMPLOYEE)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'employee0_.EMP_ID as EMP_ID1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=EMPLOYEE,tableAlias=employee0_,origin=null,columns={,className=fr.formation.inti.entities.Employee}}}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.DEPT_ID as DEPT_ID7_1_, employee0_.END_DATE as END_DATE2_1_, employee0_.FIRST_NAME as FIRST_NA3_1_, employee0_.LAST_NAME as LAST_NAM4_1_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_, employee0_.START_DATE as START_DA5_1_, employee0_.title as title6_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'EMPLOYEE employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=EMPLOYEE,tableAlias=employee0_,origin=null,columns={,className=fr.formation.inti.entities.Employee}}

throwQueryException() : no errors
HQL: from fr.formation.inti.entities.Employee
SQL: select employee0_.EMP_ID as EMP_ID1_1_, employee0_.DEPT_ID as DEPT_ID7_1_, employee0_.END_DATE as END_DATE2_1_, employee0_.FIRST_NAME as FIRST_NA3_1_, employee0_.LAST_NAME as LAST_NAM4_1_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_, employee0_.START_DATE as START_DA5_1_, employee0_.title as title6_1_ from EMPLOYEE employee0_
throwQueryException() : no errors
select employee0_.EMP_ID as EMP_ID1_1_, employee0_.DEPT_ID as DEPT_ID7_1_, employee0_.END_DATE as END_DATE2_1_, employee0_.FIRST_NAME as FIRST_NA3_1_, employee0_.LAST_NAME as LAST_NAM4_1_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_, employee0_.START_DATE as START_DA5_1_, employee0_.title as title6_1_ from EMPLOYEE employee0_
Obtaining JDBC connection
Obtained JDBC connection
Result set row: 0
Result row: EntityKey[fr.formation.inti.entities.Employee#1]
Result set row: 1
Result row: EntityKey[fr.formation.inti.entities.Employee#2]
Result set row: 2
Result row: EntityKey[fr.formation.inti.entities.Employee#3]
Result set row: 3
Result row: EntityKey[fr.formation.inti.entities.Employee#4]
Result set row: 4
Result row: EntityKey[fr.formation.inti.entities.Employee#5]
Result set row: 5
Result row: EntityKey[fr.formation.inti.entities.Employee#6]
Result set row: 6
Result row: EntityKey[fr.formation.inti.entities.Employee#7]
Result set row: 7
Result row: EntityKey[fr.formation.inti.entities.Employee#8]
Result set row: 8
Result row: EntityKey[fr.formation.inti.entities.Employee#9]
Result set row: 9
Result row: EntityKey[fr.formation.inti.entities.Employee#10]
Result set row: 10
Result row: EntityKey[fr.formation.inti.entities.Employee#11]
Result set row: 11
Result row: EntityKey[fr.formation.inti.entities.Employee#12]
Result set row: 12
Result row: EntityKey[fr.formation.inti.entities.Employee#13]
Result set row: 13
Result row: EntityKey[fr.formation.inti.entities.Employee#14]
Result set row: 14
Result row: EntityKey[fr.formation.inti.entities.Employee#15]
Result set row: 15
Result row: EntityKey[fr.formation.inti.entities.Employee#16]
Result set row: 16
Result row: EntityKey[fr.formation.inti.entities.Employee#17]
Result set row: 17
Result row: EntityKey[fr.formation.inti.entities.Employee#18]
Result set row: 18
Result row: EntityKey[fr.formation.inti.entities.Employee#21]
Result set row: 19
Result row: EntityKey[fr.formation.inti.entities.Employee#23]
Result set row: 20
Result row: EntityKey[fr.formation.inti.entities.Employee#24]
Result set row: 21
Result row: EntityKey[fr.formation.inti.entities.Employee#25]
Result set row: 22
Result row: EntityKey[fr.formation.inti.entities.Employee#26]
Result set row: 23
Result row: EntityKey[fr.formation.inti.entities.Employee#33]
Result set row: 24
Result row: EntityKey[fr.formation.inti.entities.Employee#34]
Result set row: 25
Result row: EntityKey[fr.formation.inti.entities.Employee#39]
Result set row: 26
Result row: EntityKey[fr.formation.inti.entities.Employee#41]
Result set row: 27
Result row: EntityKey[fr.formation.inti.entities.Employee#42]
Result set row: 28
Result row: EntityKey[fr.formation.inti.entities.Employee#43]
Result set row: 29
Result row: EntityKey[fr.formation.inti.entities.Employee#44]
Resolving associations for [fr.formation.inti.entities.Employee#1]
Done materializing entity [fr.formation.inti.entities.Employee#1]
Resolving associations for [fr.formation.inti.entities.Employee#2]
Done materializing entity [fr.formation.inti.entities.Employee#2]
Resolving associations for [fr.formation.inti.entities.Employee#3]
Done materializing entity [fr.formation.inti.entities.Employee#3]
Resolving associations for [fr.formation.inti.entities.Employee#4]
Done materializing entity [fr.formation.inti.entities.Employee#4]
Resolving associations for [fr.formation.inti.entities.Employee#5]
Done materializing entity [fr.formation.inti.entities.Employee#5]
Resolving associations for [fr.formation.inti.entities.Employee#6]
Done materializing entity [fr.formation.inti.entities.Employee#6]
Resolving associations for [fr.formation.inti.entities.Employee#7]
Done materializing entity [fr.formation.inti.entities.Employee#7]
Resolving associations for [fr.formation.inti.entities.Employee#8]
Done materializing entity [fr.formation.inti.entities.Employee#8]
Resolving associations for [fr.formation.inti.entities.Employee#9]
Done materializing entity [fr.formation.inti.entities.Employee#9]
Resolving associations for [fr.formation.inti.entities.Employee#10]
Done materializing entity [fr.formation.inti.entities.Employee#10]
Resolving associations for [fr.formation.inti.entities.Employee#11]
Done materializing entity [fr.formation.inti.entities.Employee#11]
Resolving associations for [fr.formation.inti.entities.Employee#12]
Done materializing entity [fr.formation.inti.entities.Employee#12]
Resolving associations for [fr.formation.inti.entities.Employee#13]
Done materializing entity [fr.formation.inti.entities.Employee#13]
Resolving associations for [fr.formation.inti.entities.Employee#14]
Done materializing entity [fr.formation.inti.entities.Employee#14]
Resolving associations for [fr.formation.inti.entities.Employee#15]
Done materializing entity [fr.formation.inti.entities.Employee#15]
Resolving associations for [fr.formation.inti.entities.Employee#16]
Done materializing entity [fr.formation.inti.entities.Employee#16]
Resolving associations for [fr.formation.inti.entities.Employee#17]
Done materializing entity [fr.formation.inti.entities.Employee#17]
Resolving associations for [fr.formation.inti.entities.Employee#18]
Done materializing entity [fr.formation.inti.entities.Employee#18]
Resolving associations for [fr.formation.inti.entities.Employee#21]
Done materializing entity [fr.formation.inti.entities.Employee#21]
Resolving associations for [fr.formation.inti.entities.Employee#23]
Done materializing entity [fr.formation.inti.entities.Employee#23]
Resolving associations for [fr.formation.inti.entities.Employee#24]
Done materializing entity [fr.formation.inti.entities.Employee#24]
Resolving associations for [fr.formation.inti.entities.Employee#25]
Done materializing entity [fr.formation.inti.entities.Employee#25]
Resolving associations for [fr.formation.inti.entities.Employee#26]
Done materializing entity [fr.formation.inti.entities.Employee#26]
Resolving associations for [fr.formation.inti.entities.Employee#33]
Done materializing entity [fr.formation.inti.entities.Employee#33]
Resolving associations for [fr.formation.inti.entities.Employee#34]
Done materializing entity [fr.formation.inti.entities.Employee#34]
Resolving associations for [fr.formation.inti.entities.Employee#39]
Done materializing entity [fr.formation.inti.entities.Employee#39]
Resolving associations for [fr.formation.inti.entities.Employee#41]
Done materializing entity [fr.formation.inti.entities.Employee#41]
Resolving associations for [fr.formation.inti.entities.Employee#42]
Done materializing entity [fr.formation.inti.entities.Employee#42]
Resolving associations for [fr.formation.inti.entities.Employee#43]
Done materializing entity [fr.formation.inti.entities.Employee#43]
Resolving associations for [fr.formation.inti.entities.Employee#44]
Done materializing entity [fr.formation.inti.entities.Employee#44]
Releasing JDBC connection
Released JDBC connection
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Returning a Reference to the SessionFactory
Connection pool now considered primed; min-size will be maintained
Connection pool now considered primed; min-size will be maintained
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding type registration boolean -> org.hibernate.type.BooleanType@16022d9d
Adding type registration boolean -> org.hibernate.type.BooleanType@16022d9d
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@16022d9d
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@134593bf
Adding type registration true_false -> org.hibernate.type.TrueFalseType@b9afc07
Adding type registration yes_no -> org.hibernate.type.YesNoType@5427c60c
Adding type registration byte -> org.hibernate.type.ByteType@5f71c76a
Adding type registration byte -> org.hibernate.type.ByteType@5f71c76a
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5f71c76a
Adding type registration character -> org.hibernate.type.CharacterType@133e16fd
Adding type registration char -> org.hibernate.type.CharacterType@133e16fd
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@133e16fd
Adding type registration short -> org.hibernate.type.ShortType@dbd940d
Adding type registration short -> org.hibernate.type.ShortType@dbd940d
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@dbd940d
Adding type registration integer -> org.hibernate.type.IntegerType@70a9f84e
Adding type registration int -> org.hibernate.type.IntegerType@70a9f84e
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@70a9f84e
Adding type registration long -> org.hibernate.type.LongType@77a57272
Adding type registration long -> org.hibernate.type.LongType@77a57272
Adding type registration java.lang.Long -> org.hibernate.type.LongType@77a57272
Adding type registration float -> org.hibernate.type.FloatType@679b62af
Adding type registration float -> org.hibernate.type.FloatType@679b62af
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@679b62af
Adding type registration double -> org.hibernate.type.DoubleType@2d127a61
Adding type registration double -> org.hibernate.type.DoubleType@2d127a61
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2d127a61
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5e25a92e
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5e25a92e
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3e77a1ed
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3e77a1ed
Adding type registration string -> org.hibernate.type.StringType@1372ed45
Adding type registration java.lang.String -> org.hibernate.type.StringType@1372ed45
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1445d7f
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@16267862
Adding type registration url -> org.hibernate.type.UrlType@6b0c2d26
Adding type registration java.net.URL -> org.hibernate.type.UrlType@6b0c2d26
Adding type registration date -> org.hibernate.type.DateType@473b46c3
Adding type registration java.sql.Date -> org.hibernate.type.DateType@473b46c3
Adding type registration time -> org.hibernate.type.TimeType@dd3b207
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@dd3b207
Adding type registration timestamp -> org.hibernate.type.TimestampType@6a472554
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6a472554
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6a472554
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@b7f23d9
Adding type registration calendar -> org.hibernate.type.CalendarType@345965f2
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@345965f2
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@345965f2
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4450d156
Adding type registration locale -> org.hibernate.type.LocaleType@731f8236
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@731f8236
Adding type registration currency -> org.hibernate.type.CurrencyType@3b2c72c2
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b2c72c2
Adding type registration timezone -> org.hibernate.type.TimeZoneType@51b7e5df
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@51b7e5df
Adding type registration class -> org.hibernate.type.ClassType@57175e74
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@57175e74
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6328d34a
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6328d34a
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2d2e5f00
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@36f0f1be
Adding type registration binary -> org.hibernate.type.BinaryType@75f9eccc
Adding type registration byte[] -> org.hibernate.type.BinaryType@75f9eccc
Adding type registration [B -> org.hibernate.type.BinaryType@75f9eccc
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@29f69090
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@29f69090
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@29f69090
Adding type registration image -> org.hibernate.type.ImageType@52e677af
Adding type registration characters -> org.hibernate.type.CharArrayType@40e6dfe1
Adding type registration char[] -> org.hibernate.type.CharArrayType@40e6dfe1
Adding type registration [C -> org.hibernate.type.CharArrayType@40e6dfe1
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@75c072cb
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@75c072cb
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@75c072cb
Adding type registration text -> org.hibernate.type.TextType@2893de87
Adding type registration ntext -> org.hibernate.type.NTextType@212bf671
Adding type registration blob -> org.hibernate.type.BlobType@78b1cc93
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@78b1cc93
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6295d394
Adding type registration clob -> org.hibernate.type.ClobType@11dc3715
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@11dc3715
Adding type registration nclob -> org.hibernate.type.NClobType@79ad8b2f
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@79ad8b2f
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6a01e23
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7fc2413d
Adding type registration serializable -> org.hibernate.type.SerializableType@7d3a22a9
Adding type registration object -> org.hibernate.type.ObjectType@37918c79
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@37918c79
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@ec756bd
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3c72f59f
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@60dcc9fe
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@222114ba
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@16e7dcfd
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3d121db3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3b07a0d6
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@11a9e7c8
HCANN000001: Hibernate Commons Annotations {4.0.4.Final}
HHH000412: Hibernate Core {4.3.4.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH000043: Configuring from resource: /hibernate.cfg.xml
HHH000040: Configuration resource: /hibernate.cfg.xml
Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
connection.driver_class=com.mysql.jdbc.Driver
connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC
connection.username=root
connection.password=123456
hibernate.enable_lazy_load_no_trans=true
connection.pool_size=5
dialect=org.hibernate.dialect.MySQLDialect
hibernate.current_session_context_class=thread
show_sql=true
hibernate.hbm2ddl.auto=update
Session-factory config [null] named class [fr.formation.inti.entities.Employee] for mapping
Session-factory config [null] named class [fr.formation.inti.entities.Department] for mapping
HHH000041: Configured SessionFactory: null
Properties: {java.vendor=Oracle Corporation, show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_231\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_231\jre\classes, hibernate.current_session_context_class=thread, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_231-b11, user.name=IN-DF-019, connection.driver_class=com.mysql.jdbc.Driver, user.language=fr, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_231\jre\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.8.0_231, user.timezone=Europe/Paris, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_231\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=FR, connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, java.home=C:\Program Files\Java\jdk1.8.0_231\jre, java.vm.info=mixed mode, os.version=10.0, path.separator=;, connection.password=123456, java.vm.version=25.231-b11, hibernate.connection.password=123456, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, user.script=, user.home=C:\Users\IN-DF-019, hibernate.enable_lazy_load_no_trans=true, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_231\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0_231\jre\bin;C:/Program Files/Java/jdk-13.0.1/bin/server;C:/Program Files/Java/jdk-13.0.1/bin;C:\Program Files\Java\jdk1.8.0_231\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Users\IN-DF-019\AppData\Local\Microsoft\WindowsApps;;C:\Users\IN-DF-019\AppData\Local\Programs\Microsoft VS Code\bin;C:\Windows\System32;;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=fr.formation.inti.controllers.App, java.class.path=C:\Users\IN-DF-019\Desktop\core\target\classes;C:\Users\IN-DF-019\.m2\repository\org\hibernate\hibernate-core\4.3.4.Final\hibernate-core-4.3.4.Final.jar;C:\Users\IN-DF-019\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\IN-DF-019\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\IN-DF-019\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\IN-DF-019\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\IN-DF-019\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\IN-DF-019\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;C:\Users\IN-DF-019\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\IN-DF-019\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\IN-DF-019\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\IN-DF-019\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\IN-DF-019\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\IN-DF-019\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\IN-DF-019\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\IN-DF-019\eclipse\jee-2019-09\eclipse\configuration\org.eclipse.osgi\412\0\.cp\lib\javaagent-shaded.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, sun.os.patch.level=, connection.pool_size=5, java.io.tmpdir=C:\Users\IN-DF-~1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_231\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\IN-DF-019\Desktop\core, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true, hibernate.connection.pool_size=5}
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Preparing to build session factory with filters : {}
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/bd?serverTimezone=UTC]
HHH000046: Connection properties: {user=root, password=123456}
HHH000006: Autocommit mode: false
HHH000115: Hibernate connection pool size: 5 (min=1)
Initializing Connection pool with 1 Connections
Database ->
       name : MySQL
    version : 5.6.45-log
      major : 5
      minor : 6
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.47 ( Revision: fe1903b1ecb4a96a917f7ed3190d80c049b1de29 )
      major : 5
      minor : 1
JDBC version : 4.0
Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: fr.formation.inti.entities.Employee
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name Employee
Bind entity fr.formation.inti.entities.Employee on table EMPLOYEE
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=EMP_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property empId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:empId]
building SimpleValue for empId
Building property empId
Binding column: Ejb3JoinColumn{logicalColumnName='DEPT_ID', referencedColumn='DEPT_ID', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=department, insertable=true, updatable=true, unique=false}
Building property department
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='manager'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=employees, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=employees_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='employees_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='manager'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='manager'}
Collection role: fr.formation.inti.entities.Employee.employees
Building property employees
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=END_DATE, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property endDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:endDate]
building SimpleValue for endDate
Building property endDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=FIRST_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property firstName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:firstName]
building SimpleValue for firstName
Building property firstName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=LAST_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:lastName]
building SimpleValue for lastName
Building property lastName
Binding column: Ejb3JoinColumn{logicalColumnName='SUPERIOR_EMP_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=manager, insertable=true, updatable=true, unique=false}
Building property manager
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=START_DATE, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property startDate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:startDate]
building SimpleValue for startDate
Building property startDate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPLOYEE), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Employee:title]
building SimpleValue for title
Building property title
Binding entity from annotated class: fr.formation.inti.entities.Department
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name Department
Bind entity fr.formation.inti.entities.Department on table DEPARTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=DEPT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property deptId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Department:deptId]
building SimpleValue for deptId
Building property deptId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=employees, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=employees_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='employees_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='department'}
Collection role: fr.formation.inti.entities.Department.employees
Building property employees
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DEPARTMENT), mappingColumn=NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [fr.formation.inti.entities.Department:name]
building SimpleValue for name
Building property name
Starting fillSimpleValue for empId
Starting fillSimpleValue for endDate
Starting fillSimpleValue for firstName
Starting fillSimpleValue for lastName
Starting fillSimpleValue for startDate
Starting fillSimpleValue for title
Starting fillSimpleValue for deptId
Starting fillSimpleValue for name
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: fr.formation.inti.entities.Employee.employees
Binding a OneToMany: fr.formation.inti.entities.Employee.employees through a foreign key
Mapping collection: fr.formation.inti.entities.Employee.employees -> EMPLOYEE
Retrieving property fr.formation.inti.entities.Employee.manager
Mapped collection key: SUPERIOR_EMP_ID, one-to-many: fr.formation.inti.entities.Employee
Second pass for collection: fr.formation.inti.entities.Department.employees
Binding a OneToMany: fr.formation.inti.entities.Department.employees through a foreign key
Mapping collection: fr.formation.inti.entities.Department.employees -> EMPLOYEE
Retrieving property fr.formation.inti.entities.Employee.department
Mapped collection key: DEPT_ID, one-to-many: fr.formation.inti.entities.Employee
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: fr.formation.inti.entities.Department
Resolving reference to class: fr.formation.inti.entities.Employee
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000399: Using default transaction strategy (direct JDBC transactions)
Using BatchFetchStyle : LEGACY
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Default null ordering: none
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: disabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : enabled
JTA Track by Thread: enabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, show_sql=true, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_231\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_231\jre\classes, hibernate.current_session_context_class=thread, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_231-b11, user.name=IN-DF-019, connection.driver_class=com.mysql.jdbc.Driver, user.language=fr, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_231\jre\bin, dialect=org.hibernate.dialect.MySQLDialect, java.version=1.8.0_231, user.timezone=Europe/Paris, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_231\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=FR, connection.url=jdbc:mysql://localhost:3306/bd?serverTimezone=UTC, java.home=C:\Program Files\Java\jdk1.8.0_231\jre, java.vm.info=mixed mode, os.version=10.0, path.separator=;, connection.password=123456, java.vm.version=25.231-b11, hibernate.connection.password=123456, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, user.script=, user.home=C:\Users\IN-DF-019, hibernate.enable_lazy_load_no_trans=true, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.8.0_231\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Java\jdk1.8.0_231\jre\bin;C:/Program Files/Java/jdk-13.0.1/bin/server;C:/Program Files/Java/jdk-13.0.1/bin;C:\Program Files\Java\jdk1.8.0_231\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Users\IN-DF-019\AppData\Local\Microsoft\WindowsApps;;C:\Users\IN-DF-019\AppData\Local\Programs\Microsoft VS Code\bin;C:\Windows\System32;;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, connection.username=root, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=fr.formation.inti.controllers.App, java.class.path=C:\Users\IN-DF-019\Desktop\core\target\classes;C:\Users\IN-DF-019\.m2\repository\org\hibernate\hibernate-core\4.3.4.Final\hibernate-core-4.3.4.Final.jar;C:\Users\IN-DF-019\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\IN-DF-019\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\IN-DF-019\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\IN-DF-019\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\IN-DF-019\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\IN-DF-019\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;C:\Users\IN-DF-019\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\IN-DF-019\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\IN-DF-019\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\IN-DF-019\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\IN-DF-019\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\IN-DF-019\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\IN-DF-019\.m2\repository\mysql\mysql-connector-java\5.1.47\mysql-connector-java-5.1.47.jar;C:\Users\IN-DF-019\eclipse\jee-2019-09\eclipse\configuration\org.eclipse.osgi\412\0\.cp\lib\javaagent-shaded.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, sun.os.patch.level=, connection.pool_size=5, java.io.tmpdir=C:\Users\IN-DF-~1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_231\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\IN-DF-019\Desktop\core, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.pool_size=5, hibernate.show_sql=true}
Skipping JACC integration as it was not enabled
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for collection: fr.formation.inti.entities.Department.employees
 Row insert: update EMPLOYEE set DEPT_ID=? where EMP_ID=?
 Row update: update EMPLOYEE set  where EMP_ID=?
 Row delete: update EMPLOYEE set DEPT_ID=null where DEPT_ID=? and EMP_ID=?
 One-shot delete: update EMPLOYEE set DEPT_ID=null where DEPT_ID=?
Static SQL for collection: fr.formation.inti.entities.Employee.employees
 Row insert: update EMPLOYEE set SUPERIOR_EMP_ID=? where EMP_ID=?
 Row update: update EMPLOYEE set  where EMP_ID=?
 Row delete: update EMPLOYEE set SUPERIOR_EMP_ID=null where SUPERIOR_EMP_ID=? and EMP_ID=?
 One-shot delete: update EMPLOYEE set SUPERIOR_EMP_ID=null where SUPERIOR_EMP_ID=?
Static SQL for entity: fr.formation.inti.entities.Employee
 Version select: select EMP_ID from EMPLOYEE where EMP_ID =?
 Snapshot select: select employee_.EMP_ID, employee_.DEPT_ID as DEPT_ID7_1_, employee_.END_DATE as END_DATE2_1_, employee_.FIRST_NAME as FIRST_NA3_1_, employee_.LAST_NAME as LAST_NAM4_1_, employee_.SUPERIOR_EMP_ID as SUPERIOR8_1_, employee_.START_DATE as START_DA5_1_, employee_.title as title6_1_ from EMPLOYEE employee_ where employee_.EMP_ID=?
 Insert 0: insert into EMPLOYEE (DEPT_ID, END_DATE, FIRST_NAME, LAST_NAME, SUPERIOR_EMP_ID, START_DATE, title, EMP_ID) values (?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update EMPLOYEE set DEPT_ID=?, END_DATE=?, FIRST_NAME=?, LAST_NAME=?, SUPERIOR_EMP_ID=?, START_DATE=?, title=? where EMP_ID=?
 Delete 0: delete from EMPLOYEE where EMP_ID=?
 Identity insert: insert into EMPLOYEE (DEPT_ID, END_DATE, FIRST_NAME, LAST_NAME, SUPERIOR_EMP_ID, START_DATE, title) values (?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54e7391d]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [NONE]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e27ba81]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [READ]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1556f2dd]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [UPGRADE]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62577d6]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [UPGRADE_NOWAIT]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b5f8707]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [UPGRADE_SKIPLOCKED]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a12c728]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [FORCE]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e5bfdfc]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [PESSIMISTIC_READ]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71652c98]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [PESSIMISTIC_WRITE]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60b85ba1]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [PESSIMISTIC_FORCE_INCREMENT]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@117632cf]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [OPTIMISTIC]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d71adc2]
Visiting attribute path : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Employee)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Employee)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Employee)
          - SQL table alias mapping - employee0_
          - alias suffix - 0_
          - suffixed key columns - {EMP_ID1_1_0_}

Static select for entity fr.formation.inti.entities.Employee [OPTIMISTIC_FORCE_INCREMENT]: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Static select for action ACTION_MERGE on entity fr.formation.inti.entities.Employee: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Static select for action ACTION_REFRESH on entity fr.formation.inti.entities.Employee: select employee0_.EMP_ID as EMP_ID1_1_0_, employee0_.DEPT_ID as DEPT_ID7_1_0_, employee0_.END_DATE as END_DATE2_1_0_, employee0_.FIRST_NAME as FIRST_NA3_1_0_, employee0_.LAST_NAME as LAST_NAM4_1_0_, employee0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employee0_.START_DATE as START_DA5_1_0_, employee0_.title as title6_1_0_ from EMPLOYEE employee0_ where employee0_.EMP_ID=?
Static SQL for entity: fr.formation.inti.entities.Department
 Version select: select DEPT_ID from DEPARTMENT where DEPT_ID =?
 Snapshot select: select department_.DEPT_ID, department_.NAME as NAME2_0_ from DEPARTMENT department_ where department_.DEPT_ID=?
 Insert 0: insert into DEPARTMENT (NAME, DEPT_ID) values (?, ?)
 Update 0: update DEPARTMENT set NAME=? where DEPT_ID=?
 Delete 0: delete from DEPARTMENT where DEPT_ID=?
 Identity insert: insert into DEPARTMENT (NAME) values (?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2237bada]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [NONE]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5710768a]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [READ]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e0d4a8]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [UPGRADE]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30272916]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [UPGRADE_NOWAIT]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bf61e67]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [UPGRADE_SKIPLOCKED]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@251ebf23]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [FORCE]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b70203f]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [PESSIMISTIC_READ]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15051a0]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [PESSIMISTIC_WRITE]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b09fac1]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [PESSIMISTIC_FORCE_INCREMENT]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61019f59]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [OPTIMISTIC]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26f3d90c]
Visiting attribute path : employees
Visiting attribute path : name
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=fr.formation.inti.entities.Department)
    - Returns
       - EntityReturnImpl(entity=fr.formation.inti.entities.Department, querySpaceUid=<gen:0>, path=fr.formation.inti.entities.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=fr.formation.inti.entities.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID1_0_0_}

Static select for entity fr.formation.inti.entities.Department [OPTIMISTIC_FORCE_INCREMENT]: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Static select for action ACTION_MERGE on entity fr.formation.inti.entities.Department: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Static select for action ACTION_REFRESH on entity fr.formation.inti.entities.Department: select department0_.DEPT_ID as DEPT_ID1_0_0_, department0_.NAME as NAME2_0_0_ from DEPARTMENT department0_ where department0_.DEPT_ID=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@76f10035]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b530eb9]
Visiting attribute path : department
Property path deemed to be circular : department
Visiting attribute path : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=fr.formation.inti.entities.Department.employees)
    - Returns
       - CollectionReturnImpl(collection=fr.formation.inti.entities.Department.employees, querySpaceUid=<gen:0>, path=[fr.formation.inti.entities.Department.employees])
          - (collection element) CollectionFetchableElementEntityGraph(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:1>, path=[fr.formation.inti.entities.Department.employees].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=fr.formation.inti.entities.Department.employees)
          - SQL table alias mapping - employees0_
          - alias suffix - 0_
          - suffixed key columns - {DEPT_ID7_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - EMP_ID1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=fr.formation.inti.entities.Employee)
                - SQL table alias mapping - employees0_
                - alias suffix - 1_
                - suffixed key columns - {EMP_ID1_1_1_}

Static select for collection fr.formation.inti.entities.Department.employees: select employees0_.DEPT_ID as DEPT_ID7_0_0_, employees0_.EMP_ID as EMP_ID1_1_0_, employees0_.EMP_ID as EMP_ID1_1_1_, employees0_.DEPT_ID as DEPT_ID7_1_1_, employees0_.END_DATE as END_DATE2_1_1_, employees0_.FIRST_NAME as FIRST_NA3_1_1_, employees0_.LAST_NAME as LAST_NAM4_1_1_, employees0_.SUPERIOR_EMP_ID as SUPERIOR8_1_1_, employees0_.START_DATE as START_DA5_1_1_, employees0_.title as title6_1_1_ from EMPLOYEE employees0_ where employees0_.DEPT_ID=? order by employees0_.FIRST_NAME desc
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@74cf8b28]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36c54a56]
Visiting attribute path : department
Visiting attribute path : employees
Property path deemed to be circular : employees
Visiting attribute path : endDate
Visiting attribute path : firstName
Visiting attribute path : lastName
Visiting attribute path : manager
Property path deemed to be circular : manager
Visiting attribute path : startDate
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=fr.formation.inti.entities.Employee.employees)
    - Returns
       - CollectionReturnImpl(collection=fr.formation.inti.entities.Employee.employees, querySpaceUid=<gen:0>, path=[fr.formation.inti.entities.Employee.employees])
          - (collection element) CollectionFetchableElementEntityGraph(entity=fr.formation.inti.entities.Employee, querySpaceUid=<gen:1>, path=[fr.formation.inti.entities.Employee.employees].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=fr.formation.inti.entities.Employee.employees)
          - SQL table alias mapping - employees0_
          - alias suffix - 0_
          - suffixed key columns - {SUPERIOR8_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - EMP_ID1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=fr.formation.inti.entities.Employee)
                - SQL table alias mapping - employees0_
                - alias suffix - 1_
                - suffixed key columns - {EMP_ID1_1_1_}

Static select for collection fr.formation.inti.entities.Employee.employees: select employees0_.SUPERIOR_EMP_ID as SUPERIOR8_1_0_, employees0_.EMP_ID as EMP_ID1_1_0_, employees0_.EMP_ID as EMP_ID1_1_1_, employees0_.DEPT_ID as DEPT_ID7_1_1_, employees0_.END_DATE as END_DATE2_1_1_, employees0_.FIRST_NAME as FIRST_NA3_1_1_, employees0_.LAST_NAME as LAST_NAM4_1_1_, employees0_.SUPERIOR_EMP_ID as SUPERIOR8_1_1_, employees0_.START_DATE as START_DA5_1_1_, employees0_.title as title6_1_1_ from EMPLOYEE employees0_ where employees0_.SUPERIOR_EMP_ID=?
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4aa3d36
Registering SessionFactory: 3ac5ae63-e7d4-47d5-898c-07b1161c1b1f (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: fr.formation.inti.entities.Department
Resolving reference to class: fr.formation.inti.entities.Employee
HHH000261: Table found: bd.department
HHH000037: Columns: [name, dept_id]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: bd.employee
HHH000037: Columns: [end_date, last_name, assigned_branch_id, title, dept_id, first_name, superior_emp_id, emp_id, start_date]
HHH000108: Foreign keys: [employee_employee_fk, employee_department_fk, employee_branch_fk]
HHH000126: Indexes: [employee_employee_fk, employee_department_fk, employee_branch_fk, primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Connection pool now considered primed; min-size will be maintained
