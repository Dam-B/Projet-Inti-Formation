package fr.fromation.inti.entities;
// Generated 15 janv. 2020 16:53:54 by Hibernate Tools 5.2.12.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Adoption generated by hbm2java
 */
@Entity
@Table(name = "adoption", catalog = "adopt_a_pet")
public class Adoption implements java.io.Serializable {

	private Integer idadoption;
	private Pet pet;
	private User user;
	private Date dateDemande;
	private byte validationProfile;
	private byte validationPaiement;
	private Set<Paiement> paiements = new HashSet<Paiement>(0);

	public Adoption() {
	}

	public Adoption(Pet pet, User user, Date dateDemande, byte validationProfile, byte validationPaiement) {
		this.pet = pet;
		this.user = user;
		this.dateDemande = dateDemande;
		this.validationProfile = validationProfile;
		this.validationPaiement = validationPaiement;
	}

	public Adoption(Pet pet, User user, Date dateDemande, byte validationProfile, byte validationPaiement,
			Set<Paiement> paiements) {
		this.pet = pet;
		this.user = user;
		this.dateDemande = dateDemande;
		this.validationProfile = validationProfile;
		this.validationPaiement = validationPaiement;
		this.paiements = paiements;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idadoption", unique = true, nullable = false)
	public Integer getIdadoption() {
		return this.idadoption;
	}

	public void setIdadoption(Integer idadoption) {
		this.idadoption = idadoption;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idpet", nullable = false)
	public Pet getPet() {
		return this.pet;
	}

	public void setPet(Pet pet) {
		this.pet = pet;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "iduser", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_demande", nullable = false, length = 19)
	public Date getDateDemande() {
		return this.dateDemande;
	}

	public void setDateDemande(Date dateDemande) {
		this.dateDemande = dateDemande;
	}

	@Column(name = "validation_profile", nullable = false)
	public byte getValidationProfile() {
		return this.validationProfile;
	}

	public void setValidationProfile(byte validationProfile) {
		this.validationProfile = validationProfile;
	}

	@Column(name = "validation_paiement", nullable = false)
	public byte getValidationPaiement() {
		return this.validationPaiement;
	}

	public void setValidationPaiement(byte validationPaiement) {
		this.validationPaiement = validationPaiement;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "adoption")
	public Set<Paiement> getPaiements() {
		return this.paiements;
	}

	public void setPaiements(Set<Paiement> paiements) {
		this.paiements = paiements;
	}

}
